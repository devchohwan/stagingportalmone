<style>
  .profile-container {
    min-height: 100vh;
    background: #ffffff;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    padding: 40px 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .profile-header {
    text-align: center;
    margin-bottom: 40px;
  }
  
  .profile-title-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    margin-bottom: 16px;
  }
  
  .profile-icon {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #667eea, #764ba2);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
  }
  
  .profile-title {
    font-size: 2rem;
    font-weight: bold;
    color: #2d3748;
    margin: 0;
  }
  
  .profile-subtitle {
    color: #718096;
    font-size: 1rem;
  }
  
  .content-wrapper {
    width: 100%;
    max-width: 600px;
    display: flex;
    flex-direction: column;
    gap: 25px;
  }
  
  .settings-card {
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.08);
    border: 1px solid #e2e8f0;
    padding: 32px;
    transition: all 0.3s ease;
  }
  
  .settings-card:hover {
    box-shadow: 0 8px 35px rgba(0, 0, 0, 0.12);
    transform: translateY(-2px);
  }
  
  .card-header {
    margin-bottom: 24px;
  }
  
  .card-title {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.25rem;
    font-weight: 700;
    color: #2d3748;
    margin-bottom: 8px;
  }
  
  .card-description {
    color: #718096;
    font-size: 0.9rem;
    line-height: 1.5;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  .form-label {
    display: block;
    font-size: 0.9rem;
    font-weight: 600;
    color: #4a5568;
    margin-bottom: 8px;
  }
  
  .form-input {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    background: #ffffff;
  }
  
  .form-input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }
  
  .form-input:disabled,
  .form-input[readonly] {
    background: #f7fafc;
    color: #718096;
    cursor: not-allowed;
  }
  
  .current-phone-display {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    background: #f7fafc;
    color: #718096;
    font-size: 0.9rem;
  }
  
  .input-group {
    display: flex;
    gap: 12px;
    align-items: flex-end;
  }
  
  .input-group .form-input {
    flex: 1;
  }
  
  .btn-primary {
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    padding: 12px 24px;
    border-radius: 10px;
    text-decoration: none;
    font-weight: 600;
    text-align: center;
    display: inline-block;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    font-size: 0.9rem;
    white-space: nowrap;
  }
  
  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
  }
  
  .btn-secondary {
    background: #f7fafc;
    color: #4a5568;
    padding: 12px 24px;
    border-radius: 10px;
    text-decoration: none;
    font-weight: 600;
    text-align: center;
    display: inline-block;
    transition: all 0.3s ease;
    border: 2px solid #e2e8f0;
    font-size: 0.9rem;
    white-space: nowrap;
  }
  
  .btn-secondary:hover {
    background: #edf2f7;
    border-color: #cbd5e0;
    transform: translateY(-2px);
  }
  
  .btn-full-width {
    width: 100%;
  }
  
  .verification-section {
    margin-top: 16px;
    padding: 20px;
    background: #f8fafc;
    border-radius: 12px;
    border: 2px solid #e2e8f0;
  }
  
  .verification-section.hidden {
    display: none;
  }
  
  .verification-timer {
    font-size: 0.8rem;
    color: #718096;
    margin-top: 8px;
  }
  
  .verification-status {
    font-size: 0.85rem;
    margin-top: 8px;
    font-weight: 500;
  }
  
  .verification-status.success {
    color: #38a169;
  }
  
  .verification-status.error {
    color: #e53e3e;
  }
  
  .form-help {
    font-size: 0.8rem;
    color: #718096;
    margin-top: 6px;
  }
  
  .alert {
    padding: 16px 20px;
    border-radius: 12px;
    margin-bottom: 24px;
    font-size: 0.9rem;
    font-weight: 500;
  }
  
  .alert-success {
    background: #f0fff4;
    border: 2px solid #9ae6b4;
    color: #22543d;
  }
  
  .alert-error {
    background: #fed7d7;
    border: 2px solid #feb2b2;
    color: #742a2a;
  }
  
  .back-link {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 20px;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    color: #718096;
    text-decoration: none;
    font-weight: 500;
    background: #ffffff;
    transition: all 0.3s ease;
    margin-top: 32px;
  }
  
  .back-link:hover {
    background: #f7fafc;
    border-color: #cbd5e0;
    color: #4a5568;
    transform: translateY(-1px);
    text-decoration: none;
  }
  
  @media (max-width: 768px) {
    .profile-container {
      padding: 20px 15px;
    }
    
    .profile-title {
      font-size: 1.6rem;
    }
    
    .content-wrapper {
      max-width: 100%;
    }
    
    .settings-card {
      padding: 24px 20px;
    }
    
    .input-group {
      flex-direction: column;
      gap: 12px;
    }
    
    .input-group .form-input {
      flex: none;
    }
    
    .btn-primary,
    .btn-secondary {
      width: 100%;
    }
  }
</style>

<div class="profile-container">
  <div class="profile-header">
    <div class="profile-title-wrapper">
      <div class="profile-icon">⚙️</div>
      <h1 class="profile-title">계정 설정</h1>
    </div>
    <p class="profile-subtitle">계정 정보를 관리하고 보안을 강화하세요</p>
  </div>

  <div class="content-wrapper">
    <!-- 메시지 표시 영역 -->
    <% if flash[:alert] %>
      <div class="alert alert-error">
        ⚠️ <%= flash[:alert] %>
      </div>
    <% end %>
    
    <% if flash[:notice] %>
      <div class="alert alert-success">
        ✅ <%= flash[:notice] %>
      </div>
    <% end %>

    <!-- 비밀번호 변경 카드 -->
    <div class="settings-card">
      <div class="card-header">
        <h2 class="card-title">
          <span>🔒</span>
          비밀번호 변경
        </h2>
        <p class="card-description">안전한 계정 보호를 위해 정기적으로 변경해주세요</p>
      </div>

      <%= form_with url: update_password_path, method: :patch, local: true do |f| %>
        <div class="form-group">
          <label for="current_password" class="form-label">현재 비밀번호</label>
          <input id="current_password" 
                 name="current_password" 
                 type="password" 
                 required 
                 class="form-input"
                 placeholder="현재 비밀번호를 입력하세요">
        </div>
        
        <div class="form-group">
          <label for="password" class="form-label">새 비밀번호</label>
          <input id="password" 
                 name="password" 
                 type="password" 
                 required 
                 class="form-input"
                 placeholder="새 비밀번호 (최소 6자)">
        </div>
        
        <div class="form-group">
          <label for="password_confirmation" class="form-label">새 비밀번호 확인</label>
          <input id="password_confirmation" 
                 name="password_confirmation" 
                 type="password" 
                 required 
                 class="form-input"
                 placeholder="새 비밀번호를 다시 입력하세요">
        </div>

        <button type="submit" class="btn-primary btn-full-width">
          비밀번호 변경
        </button>
      <% end %>
    </div>
    
    <!-- 전화번호 변경 카드 -->
    <div class="settings-card">
      <div class="card-header">
        <h2 class="card-title">
          <span>📱</span>
          전화번호 변경
        </h2>
        <p class="card-description">연락처 정보를 최신 상태로 유지해주세요</p>
      </div>
      
      <%= form_with url: update_phone_path, method: :patch, local: true do |f| %>
        <div class="form-group">
          <label for="current_phone" class="form-label">현재 전화번호</label>
          <div class="current-phone-display">
            <% phone = @current_phone %>
            <% if phone.present? %>
              <%= phone.gsub(/(\d{3})(\d{3,4})(\d{4})/, '\1-\2-\3') %>
            <% else %>
              등록된 번호 없음
            <% end %>
          </div>
        </div>
        
        <div class="form-group">
          <label for="new_phone" class="form-label">새 전화번호</label>
          <div class="input-group">
            <input id="new_phone" 
                   name="phone" 
                   type="tel" 
                   required 
                   maxlength="11"
                   pattern="[0-9]{10,11}"
                   class="form-input"
                   placeholder="01012345678"
                   oninput="this.value = this.value.replace(/[^0-9]/g, '')">
            <button type="button" 
                    id="verify-phone-btn"
                    onclick="sendPhoneVerification()"
                    class="btn-primary">
              인증하기
            </button>
          </div>
          <p class="form-help">* 숫자만 입력해주세요 (하이픈 제외)</p>
          
          <!-- 인증번호 입력 필드 (초기에는 숨김) -->
          <div id="verification-code-section" class="verification-section hidden">
            <div class="input-group">
              <input type="text" 
                     id="verification-code"
                     placeholder="인증번호 6자리를 입력하세요"
                     maxlength="6"
                     class="form-input">
              <button type="button"
                      onclick="verifyCode()"
                      class="btn-primary">
                확인
              </button>
            </div>
            <p id="timer-display" class="verification-timer"></p>
          </div>
          <p id="phone-verify-status" class="verification-status"></p>
        </div>
        
        <button type="submit" class="btn-primary btn-full-width">
          전화번호 변경
        </button>
      <% end %>
    </div>

    <!-- 뒤로가기 버튼 -->
    <div style="text-align: center;">
      <%= link_to services_path, class: "back-link" do %>
        ← 서비스 메인으로
      <% end %>
    </div>
  </div>
</div>

<script>
let verificationTimer;
let timeLeft = 180; // 3분
let isPhoneVerified = false;

function sendPhoneVerification() {
  const phoneInput = document.getElementById('new_phone');
  const phone = phoneInput.value.replace(/-/g, '');
  
  // 전화번호 유효성 검사
  if (!phone || phone.length !== 11) {
    alert('올바른 전화번호를 입력해주세요. (예: 01012345678)');
    return;
  }
  
  // 인증번호 발송 API 호출
  fetch('/api/send-verification', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    },
    body: JSON.stringify({ phone: phone })
  })
  .then(response => response.json())
  .then(data => {
    if (!data.success) {
      alert(data.message || '인증번호 발송에 실패했습니다.');
      return;
    }
    console.log('인증번호 발송 성공:', data.message);
  })
  .catch(error => {
    console.error('Error:', error);
    alert('인증번호 발송 중 오류가 발생했습니다.');
  });
  
  // UI 업데이트
  const verificationSection = document.getElementById('verification-code-section');
  verificationSection.classList.remove('hidden');
  
  const btn = document.getElementById('verify-phone-btn');
  btn.textContent = '재발송';
  btn.classList.remove('btn-primary');
  btn.classList.add('btn-secondary');
  
  // 상태 메시지
  const statusEl = document.getElementById('phone-verify-status');
  statusEl.textContent = '인증번호가 발송되었습니다.';
  statusEl.classList.add('success');
  statusEl.classList.remove('error');
  
  // 타이머 시작
  startTimer();
}

function startTimer() {
  // 이전 타이머가 있으면 초기화
  if (verificationTimer) {
    clearInterval(verificationTimer);
  }
  
  timeLeft = 180; // 3분 리셋
  
  verificationTimer = setInterval(() => {
    timeLeft--;
    
    const minutes = Math.floor(timeLeft / 60);
    const seconds = timeLeft % 60;
    
    document.getElementById('timer-display').textContent = 
      `남은 시간: ${minutes}:${seconds.toString().padStart(2, '0')}`;
    
    if (timeLeft <= 0) {
      clearInterval(verificationTimer);
      document.getElementById('timer-display').textContent = '시간 초과 - 재발송 버튼을 클릭하세요';
      document.getElementById('timer-display').style.color = '#e53e3e';
    }
  }, 1000);
}

function verifyCode() {
  const code = document.getElementById('verification-code').value;
  
  if (!code || code.length !== 6) {
    alert('6자리 인증번호를 입력해주세요.');
    return;
  }
  
  // 인증번호 확인 API 호출
  fetch('/api/verify-code', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
    },
    body: JSON.stringify({ code: code })
  })
  .then(response => response.json())
  .then(data => {
    if (!data.success) {
      alert(data.message || '인증번호가 일치하지 않습니다.');
      return;
    }
    
    // 인증 성공 처리
    isPhoneVerified = true;
    clearInterval(verificationTimer);
    
    // UI 업데이트
    document.getElementById('verification-code-section').classList.add('hidden');
    document.getElementById('verify-phone-btn').style.display = 'none';
    document.getElementById('new_phone').setAttribute('readonly', true);
    document.getElementById('new_phone').classList.add('form-input');
    
    // 상태 메시지
    const statusEl = document.getElementById('phone-verify-status');
    statusEl.textContent = '✓ 인증이 완료되었습니다.';
    statusEl.classList.add('success');
    statusEl.classList.remove('error');
  })
  .catch(error => {
    console.error('Error:', error);
    alert('인증 확인 중 오류가 발생했습니다.');
  });
}

// 폼 제출 시 인증 확인
document.addEventListener('DOMContentLoaded', function() {
  const phoneForm = document.querySelector('form[action="<%= update_phone_path %>"]');
  if (phoneForm) {
    phoneForm.addEventListener('submit', function(e) {
      if (!isPhoneVerified) {
        e.preventDefault();
        alert('전화번호 인증을 완료해주세요.');
      }
    });
  }
});
</script>