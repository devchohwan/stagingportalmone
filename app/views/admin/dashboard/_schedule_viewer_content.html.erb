<style>
  /* Ï†ÑÏ≤¥ Ïª®ÌÖåÏù¥ÎÑà - Í≥†Ïú† ÌÅ¥ÎûòÏä§Î°ú CSS Í≤©Î¶¨ */
  .schedule-viewer-wrapper {
    min-height: 100vh;
    background: #f9fafb;
    padding: 1.5rem;
  }

  .schedule-viewer-wrapper .header-card {
    background: white;
    border-radius: 10px;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
  }

  .schedule-viewer-wrapper .header-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: #667eea;
  }

  .schedule-viewer-wrapper .tabs-card {
    background: white;
    border-radius: 10px;
    padding: 1rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
  }

  .schedule-viewer-wrapper .teacher-tab {
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 600;
    transition: all 0.2s;
    border: none;
    cursor: pointer;
  }

  .schedule-viewer-wrapper .teacher-tab.active {
    background: #667eea;
    color: white;
  }

  .schedule-viewer-wrapper .teacher-tab:not(.active) {
    background: #e5e7eb;
    color: #374151;
  }

  .schedule-viewer-wrapper .teacher-tab:not(.active):hover {
    background: #d1d5db;
  }

  .schedule-viewer-wrapper .nav-card {
    background: white;
    border-radius: 10px;
    padding: 1rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
  }

  .schedule-viewer-wrapper .nav-btn {
    background: #667eea;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
  }

  .schedule-viewer-wrapper .nav-btn:hover {
    background: #5568d3;
  }

  .schedule-viewer-wrapper .table-container {
    background: white;
    border-radius: 10px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    overflow: hidden;
  }

  .schedule-viewer-wrapper table {
    border-collapse: collapse;
    table-layout: fixed;
    width: auto;
  }

  .schedule-viewer-wrapper th {
    background: #667eea;
    color: white;
    font-weight: 700;
    padding: 0.5rem;
    border: 1px solid white;
    text-align: center;
    width: 140px;
  }

  .schedule-viewer-wrapper th:first-child {
    width: 80px;
  }

  .schedule-viewer-wrapper td {
    border: 1px solid #e5e7eb;
    vertical-align: top;
    background: white;
    padding: 0;
    width: 140px;
  }

  .schedule-viewer-wrapper .time-cell {
    background: #f9fafb;
    font-weight: 700;
    text-align: center;
    padding: 0.5rem;
    position: sticky;
    left: 0;
    z-index: 10;
    width: 80px;
  }

  .schedule-viewer-wrapper .schedule-cell {
    min-height: 160px;
    padding: 0.4rem;
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
  }

  .schedule-viewer-wrapper .schedule-cell.holiday {
    background: repeating-linear-gradient(
      45deg,
      #f9fafb,
      #f9fafb 10px,
      #f3f4f6 10px,
      #f3f4f6 20px
    );
    opacity: 0.6;
  }

  .schedule-viewer-wrapper .schedule-cell.holiday::before {
    content: 'üö´ Ìú¥Î¨¥Ïùº';
    display: block;
    text-align: center;
    color: #9ca3af;
    font-size: 0.75rem;
    margin-top: 3rem;
  }

  .schedule-viewer-wrapper .student-card {
    background: white;
    border: 2px solid #e5e7eb;
    border-radius: 6px;
    padding: 0.35rem 0.5rem;
    transition: all 0.2s;
  }

  .schedule-viewer-wrapper .student-card:hover {
    border-color: #667eea;
    box-shadow: 0 2px 4px rgba(102, 126, 234, 0.2);
    transform: translateX(2px);
  }

  .schedule-viewer-wrapper .student-name {
    font-weight: 700;
    color: #374151;
    font-size: 0.8rem;
    line-height: 1.3;
  }

  .schedule-viewer-wrapper .student-username {
    font-size: 0.7rem;
    color: #6b7280;
    margin-top: 0.1rem;
    line-height: 1.2;
  }

  .schedule-viewer-wrapper .count-badge {
    background: #f3f4f6;
    color: #4b5563;
    font-size: 0.7rem;
    font-weight: 700;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    text-align: center;
    margin-top: 0.5rem;
  }

  .schedule-viewer-wrapper .legend-card {
    background: white;
    border-radius: 10px;
    padding: 1rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
  }

  .schedule-viewer-wrapper .legend-items {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    font-size: 0.875rem;
  }

  .schedule-viewer-wrapper .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .schedule-viewer-wrapper .legend-box {
    width: 1.25rem;
    height: 1.25rem;
    border-radius: 4px;
  }
</style>

<div class="schedule-viewer-wrapper">
  <!-- Ìó§Îçî -->
  <div class="header-card">
    <h1 class="header-title">üì∫ ÏãúÍ∞ÑÌëú Î∑∞Ïñ¥</h1>
  </div>

  <!-- ÏÑ†ÏÉùÎãò ÌÉ≠ -->
  <div class="tabs-card">
    <div style="display: flex; gap: 0.5rem; flex-wrap: wrap;">
      <% @teachers.each do |teacher| %>
        <button
          onclick="window.switchScheduleTeacherViewer('<%= teacher %>')"
          class="teacher-tab <%= teacher == @selected_teacher ? 'active' : '' %>"
          data-teacher="<%= teacher %>">
          <%= teacher %>
        </button>
      <% end %>
    </div>
  </div>

  <!-- Ï£ºÏ∞® ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò -->
  <div class="nav-card">
    <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 1rem;">
      <button onclick="window.changeScheduleWeekViewer(-1)" class="nav-btn">
        ‚Üê Ïù¥Ï†Ñ Ï£º
      </button>
      <div id="week-display-viewer" style="font-weight: 700; font-size: 1.125rem; color: #374151;">
        2025ÎÖÑ 10Ïõî 13Ïùº Ï£º
      </div>
      <button onclick="window.changeScheduleWeekViewer(1)" class="nav-btn">
        Îã§Ïùå Ï£º ‚Üí
      </button>
    </div>
  </div>

  <!-- Î≤îÎ°Ä -->
  <div class="legend-card">
    <div class="legend-items">
      <div class="legend-item">
        <div class="legend-box" style="background: white; border: 2px solid #e5e7eb;"></div>
        <span>Ï†ïÍ∑ú ÏàòÏóÖ</span>
      </div>
      <div class="legend-item">
        <div class="legend-box" style="background: repeating-linear-gradient(45deg, #f9fafb, #f9fafb 5px, #f3f4f6 5px, #f3f4f6 10px);"></div>
        <span>Ìú¥Î¨¥Ïùº</span>
      </div>
    </div>
  </div>

  <!-- ÏãúÍ∞ÑÌëú ÌÖåÏù¥Î∏î -->
  <div class="table-container">
    <div style="overflow-x: auto;">
      <table>
        <thead>
          <tr>
            <th style="width: 100px; position: sticky; left: 0; z-index: 20;">ÏãúÍ∞Ñ</th>
            <th id="header-sun-viewer">Ïùº<br><span style="font-weight: 400; font-size: 0.875rem;">10/13</span></th>
            <th id="header-mon-viewer">Ïõî<br><span style="font-weight: 400; font-size: 0.875rem;">10/14</span></th>
            <th id="header-tue-viewer">Ìôî<br><span style="font-weight: 400; font-size: 0.875rem;">10/15</span></th>
            <th id="header-wed-viewer">Ïàò<br><span style="font-weight: 400; font-size: 0.875rem;">10/16</span></th>
            <th id="header-thu-viewer">Î™©<br><span style="font-weight: 400; font-size: 0.875rem;">10/17</span></th>
            <th id="header-fri-viewer">Í∏à<br><span style="font-weight: 400; font-size: 0.875rem;">10/18</span></th>
            <th id="header-sat-viewer">ÌÜ†<br><span style="font-weight: 400; font-size: 0.875rem;">10/19</span></th>
          </tr>
        </thead>
        <tbody>
          <% ['13-14', '14-15', '15-16', '16-17', '17-18', '19-20', '20-21', '21-22'].each do |time_slot| %>
            <tr>
              <td class="time-cell">
                <%= time_slot.split('-').map { |t| "#{t}:00" }.join('-') %>
              </td>
              <% ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'].each do |day| %>
                <td>
                  <div class="schedule-cell" id="cell-viewer-<%= day %>-<%= time_slot %>" data-day="<%= day %>" data-time="<%= time_slot %>">
                  </div>
                </td>
              <% end %>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
(function() {
  window.currentScheduleTeacherViewer = '<%= @selected_teacher %>';
  window.currentWeekOffsetViewer = 0;
  window.teacherHolidaysViewer = <%= raw @teacher_holidays.to_json %>;

  // ÏÑ†ÏÉùÎãòÏù¥ ÌäπÏ†ï ÏöîÏùºÏóê Ìú¥Î¨¥Ïù∏ÏßÄ ÌôïÏù∏
  window.isTeacherHolidayViewer = function(teacher, dayOfWeek) {
    const holidays = window.teacherHolidaysViewer[teacher] || [];
    return holidays.includes(dayOfWeek);
  };

  // ÏÑ†ÏÉùÎãò Î≥ÄÍ≤Ω
  window.switchScheduleTeacherViewer = function(teacher) {
    window.currentScheduleTeacherViewer = teacher;

    // ÌÉ≠ ÌôúÏÑ±Ìôî ÏÉÅÌÉú Î≥ÄÍ≤Ω
    document.querySelectorAll('.schedule-viewer-wrapper .teacher-tab').forEach(tab => {
      if (tab.getAttribute('data-teacher') === teacher) {
        tab.classList.add('active');
      } else {
        tab.classList.remove('active');
      }
    });

    loadScheduleViewer();
    updateHolidayCellsViewer();
  };

  // Ï£ºÏ∞® Î≥ÄÍ≤Ω
  window.changeScheduleWeekViewer = function(offset) {
    window.currentWeekOffsetViewer += offset;
    loadScheduleViewer();
    updateHolidayCellsViewer();
  };

  // ÏãúÍ∞ÑÌëú Î°úÎìú
  function loadScheduleViewer() {
    fetch(`/admin/load_schedule?teacher=${encodeURIComponent(window.currentScheduleTeacherViewer)}&week_offset=${window.currentWeekOffsetViewer}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          renderScheduleViewer(data);
          updateWeekDisplayViewer();
        } else {
          alert('ÏãúÍ∞ÑÌëúÎ•º Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        }
      })
      .catch(error => {
        console.error('Error loading schedule:', error);
        alert('ÏãúÍ∞ÑÌëúÎ•º Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      });
  }

  // ÏãúÍ∞ÑÌëú Î†åÎçîÎßÅ
  function renderScheduleViewer(data) {
    // Î™®Îì† ÏÖÄ Ï¥àÍ∏∞Ìôî
    document.querySelectorAll('.schedule-viewer-wrapper .schedule-cell').forEach(cell => {
      cell.innerHTML = '';
    });

    // Ïä§ÏºÄÏ§Ñ Îç∞Ïù¥ÌÑ∞ Î†åÎçîÎßÅ
    const schedules = data.schedules || {};

    for (const [day, timeSlots] of Object.entries(schedules)) {
      for (const [timeSlot, students] of Object.entries(timeSlots)) {
        const cellId = `cell-viewer-${day}-${timeSlot}`;
        const cell = document.getElementById(cellId);

        if (cell && students && students.length > 0) {
          students.forEach(student => {
            const card = document.createElement('div');
            card.className = 'student-card';

            // Í≤∞ÏÑù Ï≤òÎ¶¨ Ïö∞ÏÑ† Ï≤¥ÌÅ¨ (Ïã§Ï†ú is_absent ÌïÑÎìú)
            if (student.is_absent && !student.is_makeup && !student.is_pass) {
              // Í≤∞ÏÑùÏù∏ Í≤ΩÏö∞ - ÌöåÏÉâ Î∞∞Í≤Ω
              card.style.background = '#e5e7eb';
              card.style.borderColor = '#9ca3af';
              card.style.cursor = 'pointer';
              // Í≤∞ÏÑù Ï≤òÎ¶¨Îêú ÌïôÏÉù ÌÅ¥Î¶≠ Ïãú Í≤∞ÏÑù Ï∑®ÏÜå
              if (student.schedule_id) {
                card.onclick = (e) => {
                  e.stopPropagation();
                  toggleAbsence(student.schedule_id, student.name, true, day, student.is_cancelled_makeup, student.id, student.original_date, student.cancelled_makeup_request_id);
                };
              }
            } else if (student.is_makeup) {
              // Î≥¥Í∞ïÏùº Í≤ΩÏö∞ Îã§Î•∏ Î∞∞Í≤ΩÏÉâ
              card.style.background = '#fef3c7';  // Ïó∞ÎÖ∏Îûë
              card.style.color = '#000';
              card.style.border = '2px solid #fbbf24';
              card.style.cursor = 'pointer';
              card.onclick = () => showMakeupRequestInfo(student.makeup_request_id);
            } else if (student.is_makeup_away) {
              // Î≥¥Í∞ïÏúºÎ°ú Îã§Î•∏ Ïä§ÏºÄÏ§ÑÎ°ú Îπ†ÏßÑ Í≤ΩÏö∞ - ÌöåÏÉâ Î∞∞Í≤Ω
              card.style.background = '#e5e7eb';
              card.style.borderColor = '#9ca3af';
            } else if (student.is_pass) {
              // Ìå®Ïä§Ïù∏ Í≤ΩÏö∞ - ÌöåÏÉâ Î∞∞Í≤Ω
              card.style.background = '#e5e7eb';
              card.style.borderColor = '#9ca3af';
            } else if (student.is_on_leave) {
              // Ìú¥Ïõê ÏÉÅÌÉú
              card.style.background = '#fef3c7'; // Ïó∞ÎÖ∏Îûë
              card.style.borderColor = '#fbbf24';
            } else {
              // ÌôúÏÑ± ÏÉÅÌÉú
              card.style.background = '#d9f99d'; // Ïó∞ÎëêÏÉâ
              card.style.borderColor = '#84cc16';
              card.style.cursor = 'pointer';
              // Ï†ïÏÉÅ ÌïôÏÉù ÌÅ¥Î¶≠ Ïãú Í≤∞ÏÑù Ï≤òÎ¶¨
              if (student.schedule_id) {
                card.onclick = (e) => {
                  e.stopPropagation();
                  toggleAbsence(student.schedule_id, student.name, false, day);
                };
              }
            }

            const usernameDiv = document.createElement('div');
            usernameDiv.className = 'student-username';
            usernameDiv.style.fontWeight = '600';
            usernameDiv.style.textAlign = 'center';

            // Í≤∞ÏÑù Ï≤òÎ¶¨ Ïö∞ÏÑ† Ï≤¥ÌÅ¨
            if (student.is_absent && !student.is_makeup && !student.is_pass) {
              // Í≤∞ÏÑùÏù∏ Í≤ΩÏö∞
              usernameDiv.textContent = `${student.name} (Í≤∞ÏÑù)`;
            } else if (student.is_makeup && student.original_teacher) {
              // Î≥¥Í∞ïÏùº Í≤ΩÏö∞: Ïù¥Î¶Ñ(ÏõêÎûòÏÑ†ÏÉùÎãò)
              usernameDiv.textContent = `${student.name}(${student.original_teacher})`;
            } else if (student.is_makeup_away && student.moved_to_teacher) {
              // Î≥¥Í∞ïÏúºÎ°ú Ïù¥ÎèôÌïú Í≤ΩÏö∞: Ïù¥Î¶Ñ(‚ÜíÎ≥¥Í∞ïÏòàÏ†ïÏÑ†ÏÉùÎãò)
              usernameDiv.textContent = `${student.name}(‚Üí${student.moved_to_teacher})`;
            } else if (student.is_pass) {
              // Ìå®Ïä§Ïù∏ Í≤ΩÏö∞
              usernameDiv.textContent = `${student.name} (Ìå®Ïä§)`;
            } else if (student.is_on_leave) {
              // Ìú¥Ïõê ÏÉÅÌÉú ÌëúÏãú
              usernameDiv.textContent = student.username + ' (Ìú¥Ïõê)';
            } else {
              usernameDiv.textContent = student.username;
            }

            card.appendChild(usernameDiv);
            cell.appendChild(card);
          });

          // Ïã§Ï†ú Ï∂úÏÑù Ïù∏ÏõêÏàò Í≥ÑÏÇ∞ (Í≤∞ÏÑù, Î≥¥Í∞ï Ïù¥Îèô, Ìå®Ïä§ Ï†úÏô∏)
          const activeStudents = students.filter(student =>
            !student.is_absent &&
            !student.is_makeup_away &&
            !student.is_pass &&
            !student.is_on_leave
          ).length;

          // Ïù∏ÏõêÏàò ÌëúÏãú
          const countBadge = document.createElement('div');
          countBadge.className = 'count-badge';
          countBadge.textContent = `${activeStudents}/3Î™Ö`;
          cell.appendChild(countBadge);
        }
      }
    }
  }

  // Ï£ºÏ∞® ÌëúÏãú ÏóÖÎç∞Ïù¥Ìä∏
  function updateWeekDisplayViewer() {
    const today = new Date();
    const weekStart = new Date(today);
    // ÏùºÏöîÏùº ÏãúÏûë
    weekStart.setDate(today.getDate() - today.getDay() + (window.currentWeekOffsetViewer * 7));

    // ÏùºÏöîÏùº ÎÇ†ÏßúÎ°ú ÌëúÏãú
    const year = weekStart.getFullYear();
    const month = weekStart.getMonth() + 1;
    const day = weekStart.getDate();

    const weekDisplay = document.getElementById('week-display-viewer');
    if (weekDisplay) {
      weekDisplay.textContent = `${year}ÎÖÑ ${month}Ïõî ${day}Ïùº Ï£º`;
    }

    // Í∞Å ÏöîÏùºÏùò ÎÇ†Ïßú ÏóÖÎç∞Ïù¥Ìä∏
    const days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
    const dayNames = ['Ïùº', 'Ïõî', 'Ìôî', 'Ïàò', 'Î™©', 'Í∏à', 'ÌÜ†'];

    days.forEach((day, index) => {
      const dayDate = new Date(weekStart);
      // weekStartÎäî ÏùºÏöîÏùºÏù¥ÎØÄÎ°ú, sunÏùÄ +0, monÏùÄ +1, ... satÏùÄ +6
      dayDate.setDate(weekStart.getDate() + index);

      const header = document.getElementById(`header-${day}-viewer`);
      if (header) {
        const m = dayDate.getMonth() + 1;
        const d = dayDate.getDate();
        header.innerHTML = `${dayNames[index]}<br><span style="font-weight: 400; font-size: 0.875rem;">${m}/${d}</span>`;
      }
    });
  }

  // Ìú¥Î¨¥Ïùº ÏÖÄ ÏóÖÎç∞Ïù¥Ìä∏
  function updateHolidayCellsViewer() {
    const today = new Date();
    const weekStart = new Date(today);
    // ÏùºÏöîÏùº ÏãúÏûë
    weekStart.setDate(today.getDate() - today.getDay() + (window.currentWeekOffsetViewer * 7));

    const days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
    const timeSlots = ['13-14', '14-15', '15-16', '16-17', '17-18', '19-20', '20-21', '21-22'];

    days.forEach((day, index) => {
      const dayDate = new Date(weekStart);
      // weekStartÎäî ÏùºÏöîÏùºÏù¥ÎØÄÎ°ú, sunÏùÄ +0, monÏùÄ +1, ... satÏùÄ +6
      dayDate.setDate(weekStart.getDate() + index);
      const dayOfWeek = dayDate.getDay();

      const isHoliday = window.isTeacherHolidayViewer(window.currentScheduleTeacherViewer, dayOfWeek);

      timeSlots.forEach(timeSlot => {
        const cell = document.getElementById(`cell-viewer-${day}-${timeSlot}`);
        if (cell) {
          if (isHoliday) {
            cell.classList.add('holiday');
          } else {
            cell.classList.remove('holiday');
          }
        }
      });
    });
  }

  // Î≥¥Í∞ï Ïã†Ï≤≠ Ï†ïÎ≥¥ Î™®Îã¨ ÌëúÏãú
  function showMakeupRequestInfo(requestId) {
    if (!requestId) return;

    fetch(`/admin/makeup_request_info?id=${requestId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const req = data.request;
          showMakeupModal(req);
        } else {
          alert('Î≥¥Í∞ï Ïã†Ï≤≠ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Î≥¥Í∞ï Ïã†Ï≤≠ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
      });
  }

  // Î≥¥Í∞ï Ïã†Ï≤≠ Ï†ïÎ≥¥ Î™®Îã¨
  function showMakeupModal(req) {
    const modal = document.createElement('div');
    modal.style.cssText = 'position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 10000;';

    modal.innerHTML = `
      <div style="background: white; border-radius: 12px; padding: 2rem; max-width: 500px; width: 90%; box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1);">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem; border-bottom: 2px solid #667eea; padding-bottom: 1rem;">
          <h3 style="margin: 0; color: #667eea; font-size: 1.25rem; font-weight: 700;">Î≥¥Í∞ï Ïã†Ï≤≠ Ï†ïÎ≥¥</h3>
          <button onclick="this.closest('div[style*=fixed]').remove()" style="background: none; border: none; font-size: 1.5rem; color: #9ca3af; cursor: pointer; padding: 0; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center;">&times;</button>
        </div>

        <div style="space-y: 1rem;">
          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">Ïã†Ï≤≠Ïûê</div>
            <div style="color: #1f2937; font-size: 1rem; font-weight: 600;">${req.user_name}</div>
          </div>

          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">Î≥¥Í∞ïÏùº</div>
            <div style="color: #1f2937; font-size: 1rem; font-weight: 600;">${req.makeup_date}</div>
          </div>

          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">ÏãúÍ∞Ñ</div>
            <div style="color: #1f2937; font-size: 1rem; font-weight: 600;">${req.time_slot}</div>
          </div>

          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">Îã¥Îãπ</div>
            <div style="color: #1f2937; font-size: 1rem; font-weight: 600;">${req.teacher}</div>
          </div>

          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">Ï£ºÏ∞®</div>
            <div style="color: #1f2937; font-size: 1rem; font-weight: 600;">${req.week_number}Ï£ºÏ∞®</div>
          </div>

          <div style="margin-bottom: 1rem;">
            <div style="color: #6b7280; font-size: 0.875rem; margin-bottom: 0.25rem;">Ïã†Ï≤≠ ÎÇ¥Ïö©</div>
            <div style="color: #1f2937; font-size: 0.95rem; white-space: pre-wrap; background: #f9fafb; padding: 0.75rem; border-radius: 6px; margin-top: 0.5rem;">${req.content || 'ÎÇ¥Ïö© ÏóÜÏùå'}</div>
          </div>
        </div>

        <div style="margin-top: 1.5rem; display: flex; justify-content: flex-end;">
          <button onclick="this.closest('div[style*=fixed]').remove()" style="background: #667eea; color: white; border: none; padding: 0.5rem 1.5rem; border-radius: 6px; font-weight: 600; cursor: pointer;">Îã´Í∏∞</button>
        </div>
      </div>
    `;

    modal.onclick = (e) => {
      if (e.target === modal) modal.remove();
    };

    document.body.appendChild(modal);
  }

  // Í≤∞ÏÑù Ï≤òÎ¶¨/Ï∑®ÏÜå
  window.toggleAbsence = function(scheduleId, studentName, isCurrentlyAbsent, day, isCancelledMakeup, userId, originalDate, cancelledMakeupRequestId) {
    // Î≥¥Í∞ï Ï∑®ÏÜåÎ°ú Ïù∏Ìïú Í≤∞ÏÑùÏù∏ Í≤ΩÏö∞ - Î≥¥Í∞ï Î™®Îã¨ ÎùÑÏö∞Í∏∞
    if (isCurrentlyAbsent && isCancelledMakeup) {
      const message = `${studentName} ÌïôÏÉùÏùò Í≤∞ÏÑùÏ≤òÎ¶¨Î•º Ï∑®ÏÜåÌïòÏãúÍ≤†ÏäµÎãàÍπå?\nÎã§Î•∏ ÏãúÍ∞ÑÏúºÎ°ú Î≥¥Í∞ïÏùÑ Ïã†Ï≤≠Ìï¥Ïïº Ìï©ÎãàÎã§.`;
      if (!confirm(message)) {
        return;
      }
      // Î≥¥Í∞ï Î™®Îã¨ Ïó¥Í∏∞
      openRescheduleModal(userId, originalDate, cancelledMakeupRequestId, studentName);
      return;
    }

    // ÏùºÎ∞ò Í≤∞ÏÑù Ï≤òÎ¶¨/Ï∑®ÏÜå
    const message = isCurrentlyAbsent
      ? `${studentName} ÌïôÏÉùÏùò Í≤∞ÏÑùÏ≤òÎ¶¨Î•º Ï∑®ÏÜåÌïòÏãúÍ≤†ÏäµÎãàÍπå?`
      : `${studentName} ÌïôÏÉùÏùÑ Í≤∞ÏÑùÏ≤òÎ¶¨ÌïòÏãúÍ≤†ÏäµÎãàÍπå?`;

    if (!confirm(message)) {
      return;
    }

    // ÌòÑÏû¨ Î≥¥Í≥† ÏûàÎäî Ï£ºÏ∞®Ïùò target_date Í≥ÑÏÇ∞
    const today = new Date();
    const startOfCurrentWeek = new Date(today);
    startOfCurrentWeek.setDate(today.getDate() - today.getDay());
    const targetWeekStart = new Date(startOfCurrentWeek);
    targetWeekStart.setDate(startOfCurrentWeek.getDate() + (window.currentWeekOffsetViewer * 7));

    // dayÎ•º ÎÇ†ÏßúÎ°ú Î≥ÄÌôò
    const dayIndex = { 'sun': 0, 'mon': 1, 'tue': 2, 'wed': 3, 'thu': 4, 'fri': 5, 'sat': 6 }[day];
    const targetDate = new Date(targetWeekStart);
    targetDate.setDate(targetWeekStart.getDate() + dayIndex);
    const targetDateStr = targetDate.toISOString().split('T')[0];

    fetch(`/admin/teacher_schedules/${scheduleId}/toggle_absence?target_date=${targetDateStr}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      }
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(data.message);
          loadScheduleViewer(); // ÏãúÍ∞ÑÌëú ÏÉàÎ°úÍ≥†Ïπ®
        } else {
          alert(data.message || 'Ï≤òÎ¶¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        }
      })
      .catch(error => {
        console.error('Error toggling absence:', error);
        alert('Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
      });
  };

  // Î≥¥Í∞ï Ïû¨Ïã†Ï≤≠ Î™®Îã¨ (Í≤∞ÏÑù Ï∑®ÏÜå + Îã§Î•∏ ÏãúÍ∞Ñ Î≥¥Í∞ï)
  window.openRescheduleModal = function(userId, originalDate, cancelledMakeupRequestId, studentName) {
    // Î™®Îã¨ HTML ÏÉùÏÑ±
    const modal = document.createElement('div');
    modal.id = 'reschedule-modal';
    modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; justify-content: center; align-items: center; z-index: 10000;';

    modal.innerHTML = `
      <div style="background: white; border-radius: 12px; padding: 30px; max-width: 600px; width: 90%; max-height: 90vh; overflow-y: auto;">
        <h2 style="font-size: 1.5rem; font-weight: bold; margin-bottom: 10px; color: #2d3748;">${studentName} Í≤∞ÏÑù Ï∑®ÏÜå Î∞è Î≥¥Í∞ï Ïã†Ï≤≠</h2>
        <p style="color: #718096; margin-bottom: 20px;">ÏõêÎûò ÏûêÎ¶¨Í∞Ä ÍΩâ Ï∞ºÏäµÎãàÎã§. Îã§Î•∏ ÏãúÍ∞ÑÏúºÎ°ú Î≥¥Í∞ïÏùÑ Ïã†Ï≤≠ÌïòÏÑ∏Ïöî.</p>
        <p style="color: #4a5568; margin-bottom: 20px; padding: 10px; background: #f7fafc; border-radius: 6px;">
          <strong>ÏõêÎûò ÏàòÏóÖÏùº:</strong> ${originalDate}
        </p>

        <!-- ÎÇ†Ïßú ÏÑ†ÌÉù -->
        <div style="margin-bottom: 20px;">
          <label style="display: block; font-weight: 600; margin-bottom: 10px; color: #2d3748;">Î≥¥Í∞ï ÎÇ†Ïßú ÏÑ†ÌÉù</label>
          <input type="date" id="reschedule-date" style="width: 100%; padding: 10px; border: 2px solid #e2e8f0; border-radius: 6px; font-size: 1rem;">
        </div>

        <!-- ÏãúÍ∞Ñ ÏÑ†ÌÉù -->
        <div style="margin-bottom: 20px;" id="reschedule-time-section" style="display: none;">
          <label style="display: block; font-weight: 600; margin-bottom: 10px; color: #2d3748;">ÏãúÍ∞ÑÎåÄ ÏÑ†ÌÉù</label>
          <div id="reschedule-time-slots" style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px;">
            <!-- ÏãúÍ∞ÑÎåÄ Î≤ÑÌäºÎì§Ïù¥ Ïó¨Í∏∞Ïóê Ï∂îÍ∞ÄÎê©ÎãàÎã§ -->
          </div>
        </div>

        <!-- ÏÑ†ÏÉùÎãò ÏÑ†ÌÉù -->
        <div style="margin-bottom: 20px;" id="reschedule-teacher-section" style="display: none;">
          <label style="display: block; font-weight: 600; margin-bottom: 10px; color: #2d3748;">ÏÑ†ÏÉùÎãò ÏÑ†ÌÉù</label>
          <div id="reschedule-teachers" style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;">
            <!-- ÏÑ†ÏÉùÎãò Î≤ÑÌäºÎì§Ïù¥ Ïó¨Í∏∞Ïóê Ï∂îÍ∞ÄÎê©ÎãàÎã§ -->
          </div>
        </div>

        <!-- Î≤ÑÌäº -->
        <div style="display: flex; gap: 10px; margin-top: 30px;">
          <button onclick="closeRescheduleModal()" style="flex: 1; padding: 12px; border: 2px solid #e2e8f0; background: white; border-radius: 6px; font-weight: 600; cursor: pointer;">Ï∑®ÏÜå</button>
          <button id="reschedule-submit-btn" disabled style="flex: 1; padding: 12px; background: #667eea; color: white; border: none; border-radius: 6px; font-weight: 600; cursor: not-allowed;">Ïã†Ï≤≠ÌïòÍ∏∞</button>
        </div>
      </div>
    `;

    document.body.appendChild(modal);

    // Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•
    window.rescheduleData = {
      userId: userId,
      originalDate: originalDate,
      cancelledMakeupRequestId: cancelledMakeupRequestId,
      studentName: studentName,
      selectedDate: null,
      selectedTime: null,
      selectedTeacher: null
    };

    // ÎÇ†Ïßú Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏
    document.getElementById('reschedule-date').addEventListener('change', function(e) {
      window.rescheduleData.selectedDate = e.target.value;
      loadRescheduleTimeSlots();
    });
  };

  // ÏãúÍ∞ÑÎåÄ Î∂àÎü¨Ïò§Í∏∞
  function loadRescheduleTimeSlots() {
    const date = window.rescheduleData.selectedDate;
    if (!date) return;

    document.getElementById('reschedule-time-section').style.display = 'block';
    document.getElementById('reschedule-time-slots').innerHTML = '<div style="grid-column: 1/-1; text-align: center; padding: 20px; color: #9ca3af;">Î°úÎî© Ï§ë...</div>';

    // Î™®Îì† ÏÑ†ÏÉùÎãòÏùò ÏãúÍ∞ÑÌëú Î∂àÎü¨Ïò§Í∏∞
    const teachers = <%= raw @teachers.to_json %>;
    const timeSlots = ['13-14', '14-15', '15-16', '16-17', '17-18', '19-20', '20-21', '21-22'];

    // ÏãúÍ∞ÑÎåÄÎ≥ÑÎ°ú Î™®Îì† ÏÑ†ÏÉùÎãòÏùò ÏûêÎ¶¨ ÌòÑÌô© ÏßëÍ≥Ñ
    const timeSlotData = {};
    timeSlots.forEach(slot => {
      timeSlotData[slot] = { available: false, teachers: [] };
    });

    // Í∞Å ÏãúÍ∞ÑÎåÄÎ•º Î†åÎçîÎßÅ
    let html = '';
    timeSlots.forEach(slot => {
      const slotDisplay = slot.replace('-', ':00-') + ':00';
      html += `<button type="button" onclick="selectRescheduleTime('${slot}')"
                style="padding: 15px; border: 2px solid #e2e8f0; background: #dbeafe; border-radius: 6px; cursor: pointer; font-size: 0.9rem; font-weight: 600; transition: all 0.2s;"
                data-time="${slot}">${slotDisplay}</button>`;
    });

    document.getElementById('reschedule-time-slots').innerHTML = html;
  }

  // ÏãúÍ∞Ñ ÏÑ†ÌÉù
  window.selectRescheduleTime = function(timeSlot) {
    window.rescheduleData.selectedTime = timeSlot;

    // ÏãúÍ∞ÅÏ†Å ÏÑ†ÌÉù ÌëúÏãú
    document.querySelectorAll('#reschedule-time-slots button').forEach(btn => {
      btn.style.background = '#dbeafe';
      btn.style.borderColor = '#e2e8f0';
    });
    document.querySelector(`#reschedule-time-slots button[data-time="${timeSlot}"]`).style.background = '#667eea';
    document.querySelector(`#reschedule-time-slots button[data-time="${timeSlot}"]`).style.color = 'white';

    loadRescheduleTeachers();
  };

  // ÏÑ†ÏÉùÎãò Î™©Î°ù Î∂àÎü¨Ïò§Í∏∞
  function loadRescheduleTeachers() {
    const date = window.rescheduleData.selectedDate;
    const timeSlot = window.rescheduleData.selectedTime;

    document.getElementById('reschedule-teacher-section').style.display = 'block';
    document.getElementById('reschedule-teachers').innerHTML = '<div style="grid-column: 1/-1; text-align: center; padding: 20px; color: #9ca3af;">Î°úÎî© Ï§ë...</div>';

    fetch(`/makeup_pass/available_teachers?date=${date}&time_slot=${timeSlot}`)
      .then(response => response.json())
      .then(teachers => {
        let html = '';
        if (teachers.length === 0) {
          html = '<div style="grid-column: 1/-1; text-align: center; padding: 20px; color: #ef4444;">ÏòàÏïΩ Í∞ÄÎä•Ìïú ÏÑ†ÏÉùÎãòÏù¥ ÏóÜÏäµÎãàÎã§.</div>';
        } else {
          teachers.forEach(teacher => {
            html += `<button type="button" onclick="selectRescheduleTeacher('${teacher.teacher}')"
                      style="padding: 15px; border: 2px solid #e2e8f0; background: #dbeafe; border-radius: 6px; cursor: pointer; font-size: 0.9rem; font-weight: 600; transition: all 0.2s; text-align: center;"
                      data-teacher="${teacher.teacher}">
                      <div>${teacher.teacher}</div>
                      <div style="font-size: 0.8rem; margin-top: 5px;">${teacher.current_count}/3</div>
                    </button>`;
          });
        }
        document.getElementById('reschedule-teachers').innerHTML = html;
      })
      .catch(error => {
        console.error('Error loading teachers:', error);
        document.getElementById('reschedule-teachers').innerHTML = '<div style="grid-column: 1/-1; text-align: center; padding: 20px; color: #ef4444;">ÏÑ†ÏÉùÎãò Î™©Î°ùÏùÑ Î∂àÎü¨Ïò§ÎäîÎç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.</div>';
      });
  }

  // ÏÑ†ÏÉùÎãò ÏÑ†ÌÉù
  window.selectRescheduleTeacher = function(teacher) {
    window.rescheduleData.selectedTeacher = teacher;

    // ÏãúÍ∞ÅÏ†Å ÏÑ†ÌÉù ÌëúÏãú
    document.querySelectorAll('#reschedule-teachers button').forEach(btn => {
      btn.style.background = '#dbeafe';
      btn.style.borderColor = '#e2e8f0';
      btn.style.color = '#1e40af';
    });
    const selectedBtn = document.querySelector(`#reschedule-teachers button[data-teacher="${teacher}"]`);
    selectedBtn.style.background = '#667eea';
    selectedBtn.style.borderColor = '#667eea';
    selectedBtn.style.color = 'white';

    // Ïã†Ï≤≠ Î≤ÑÌäº ÌôúÏÑ±Ìôî
    const submitBtn = document.getElementById('reschedule-submit-btn');
    submitBtn.disabled = false;
    submitBtn.style.cursor = 'pointer';
    submitBtn.onclick = submitReschedule;
  };

  // Î≥¥Í∞ï Ïû¨Ïã†Ï≤≠ Ï†úÏ∂ú
  function submitReschedule() {
    const data = window.rescheduleData;

    if (!data.selectedDate || !data.selectedTime || !data.selectedTeacher) {
      alert('Î™®Îì† Ìï≠Î™©ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      return;
    }

    if (!confirm(`${data.studentName} ÌïôÏÉùÏùò Í≤∞ÏÑùÏùÑ Ï∑®ÏÜåÌïòÍ≥†\n${data.selectedDate} ${data.selectedTime.replace('-', ':00-')}:00 ${data.selectedTeacher} ÏÑ†ÏÉùÎãòÏúºÎ°ú Î≥¥Í∞ïÏùÑ Ïã†Ï≤≠ÌïòÏãúÍ≤†ÏäµÎãàÍπå?`)) {
      return;
    }

    fetch('/admin/cancel_absence_and_reschedule', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({
        user_id: data.userId,
        original_date: data.originalDate,
        cancelled_makeup_request_id: data.cancelledMakeupRequestId,
        new_date: data.selectedDate,
        new_time_slot: data.selectedTime,
        new_teacher: data.selectedTeacher
      })
    })
      .then(response => response.json())
      .then(result => {
        if (result.success) {
          alert(result.message || 'Í≤∞ÏÑùÏù¥ Ï∑®ÏÜåÎêòÍ≥† Î≥¥Í∞ïÏù¥ Ïã†Ï≤≠ÎêòÏóàÏäµÎãàÎã§.');
          closeRescheduleModal();
          loadScheduleViewer(); // ÏãúÍ∞ÑÌëú ÏÉàÎ°úÍ≥†Ïπ®
        } else {
          alert(result.message || 'Ï≤òÎ¶¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
      });
  }

  // Î™®Îã¨ Îã´Í∏∞
  window.closeRescheduleModal = function() {
    const modal = document.getElementById('reschedule-modal');
    if (modal) {
      modal.remove();
    }
    window.rescheduleData = null;
  };

  // Ï¥àÍ∏∞ Î°úÎìú
  loadScheduleViewer();
  updateHolidayCellsViewer();

  console.log('ÏãúÍ∞ÑÌëú Î∑∞Ïñ¥Í∞Ä Î°úÎìúÎêòÏóàÏäµÎãàÎã§.');
})();
</script>
