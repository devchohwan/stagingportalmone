<style>
  .reservations-container {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: 1px solid #e2e8f0;
    overflow: hidden;
  }
  
  .reservations-header {
    padding: 25px;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .reservations-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: #2d3748;
    margin-bottom: 20px;
  }
  
  .service-nav {
    display: flex;
    gap: 5px;
    margin-bottom: 20px;
    background: #f7fafc;
    padding: 5px;
    border-radius: 10px;
  }
  
  /* Ï≤¥ÌÅ¨Î∞ïÏä§ Í¥ÄÎ†® Ïä§ÌÉÄÏùº */
  .checkbox-column {
    width: 40px;
    text-align: center;
  }
  
  .bulk-actions {
    display: none;
    background: #f8fafc;
    padding: 15px 25px;
    border-bottom: 1px solid #e2e8f0;
    align-items: center;
    gap: 15px;
  }
  
  .bulk-actions.show {
    display: flex;
  }
  
  .selected-count {
    color: #4a5568;
    font-weight: 600;
  }
  
  .bulk-delete-btn {
    background: #dc2626;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .bulk-delete-btn:hover {
    background: #b91c1c;
    transform: translateY(-1px);
  }
  
  .bulk-cancel-btn {
    background: #6b7280;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .bulk-cancel-btn:hover {
    background: #4b5563;
  }
  
  .reservation-checkbox, .select-all-checkbox {
    width: 16px;
    height: 16px;
    accent-color: #f093fb;
    cursor: pointer;
  }
  
  .service-btn {
    padding: 10px 16px;
    border-radius: 6px;
    font-weight: 600;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    background: transparent;
    color: #4a5568;
  }
  
  .service-btn:hover {
    background: #edf2f7;
    color: #2d3748;
  }
  
  .service-btn.active {
    background: #ffffff;
    color: #f093fb;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .filters-container {
    display: grid;
    grid-template-columns: 1fr auto auto auto auto;
    gap: 12px;
    align-items: center;
  }
  
  .search-input {
    padding: 12px 16px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
  }
  
  .search-input:focus {
    outline: none;
    border-color: #f093fb;
    box-shadow: 0 0 0 3px rgba(240, 147, 251, 0.1);
  }
  
  .filter-select {
    padding: 12px 16px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 0.9rem;
    background: white;
    color: #4a5568;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 120px;
  }
  
  .filter-select:focus {
    outline: none;
    border-color: #f093fb;
    box-shadow: 0 0 0 3px rgba(240, 147, 251, 0.1);
  }
  
  .filter-btn {
    padding: 12px 20px;
    border: none;
    border-radius: 8px;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .filter-btn-primary {
    background: linear-gradient(135deg, #f093fb, #f5576c);
    color: white;
  }
  
  .filter-btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(240, 147, 251, 0.4);
  }
  
  .filter-btn-secondary {
    background: #f7fafc;
    color: #4a5568;
    border: 1px solid #e2e8f0;
  }
  
  .filter-btn-secondary:hover {
    background: #edf2f7;
    color: #2d3748;
  }
  
  .reservations-content {
    padding: 25px;
  }
  
  .reservations-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .table-header {
    background: #f8fafc;
  }
  
  .table-header th {
    padding: 15px 12px;
    text-align: left;
    font-weight: 600;
    font-size: 0.8rem;
    color: #4a5568;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .table-header th:first-child {
    border-radius: 8px 0 0 0;
  }
  
  .table-header th:last-child {
    border-radius: 0 8px 0 0;
  }
  
  .reservation-row {
    transition: background-color 0.2s ease;
  }
  
  .reservation-row:hover {
    background: #f8fafc;
  }
  
  .reservation-row td {
    padding: 15px 12px;
    border-bottom: 1px solid #f1f5f9;
    font-size: 0.9rem;
  }
  
  .reservation-row.pending-row {
    background: #fffbeb;
  }
  
  .user-name {
    font-weight: 600;
    color: #2d3748;
  }
  
  .room-info {
    display: flex;
    align-items: center;
    gap: 6px;
  }
  
  .outlet-icon {
    font-size: 0.8rem;
  }
  
  .status-badge {
    display: inline-flex;
    align-items: center;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
  }
  
  .status-pending {
    background: #fef3c7;
    color: #92400e;
  }
  
  .status-active {
    background: #dcfce7;
    color: #166534;
  }
  
  .status-waiting {
    background: #dbeafe;
    color: #1e40af;
  }
  
  .status-completed {
    background: #e0e7ff;
    color: #3730a3;
  }
  
  .status-cancelled {
    background: #f3f4f6;
    color: #374151;
  }
  
  .status-rejected {
    background: #fee2e2;
    color: #991b1b;
  }
  
  .status-no-show {
    background: #fecaca;
    color: #991b1b;
  }
  
  .action-controls {
    display: flex;
    align-items: center;
    gap: 8px;
    flex-wrap: wrap;
  }
  
  .action-btn {
    padding: 6px 12px;
    border: none;
    border-radius: 6px;
    font-size: 0.8rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .action-btn:hover {
    transform: translateY(-1px);
  }
  
  .btn-approve {
    background: #10b981;
    color: white;
  }
  
  .btn-approve:hover {
    background: #059669;
  }
  
  .btn-reject {
    background: #ef4444;
    color: white;
  }
  
  .btn-reject:hover {
    background: #dc2626;
  }
  
  .btn-delete {
    background: #f59e0b;
    color: white;
  }
  
  .btn-delete:hover {
    background: #d97706;
  }
  
  .status-select {
    padding: 6px 10px;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
    font-size: 0.8rem;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .status-select:focus {
    outline: none;
    border-color: #f093fb;
  }
  
  .empty-state {
    text-align: center;
    padding: 60px 20px;
    color: #9ca3af;
  }
  
  .empty-state-icon {
    font-size: 3rem;
    margin-bottom: 16px;
  }
  
  .empty-state-text {
    font-size: 1.1rem;
    font-weight: 500;
  }
  
  /* 320px Î™®Î∞îÏùº ÏµúÏ†ÅÌôî */
  @media (max-width: 320px) {
    .reservations-container {
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    }
    
    .reservations-header {
      padding: 16px;
    }
    
    .reservations-title {
      font-size: 1.2rem;
      margin-bottom: 16px;
    }
    
    .service-nav {
      gap: 4px;
      padding: 4px;
      border-radius: 8px;
      margin-bottom: 16px;
    }
    
    .service-btn {
      padding: 8px 12px;
      font-size: 0.8rem;
      border-radius: 6px;
    }
    
    .filters-container {
      grid-template-columns: 1fr;
      gap: 8px;
    }
    
    .search-input {
      padding: 10px 12px;
      font-size: 0.85rem;
      border-radius: 6px;
      width: 100%;
    }
    
    .filter-select {
      padding: 10px 12px;
      font-size: 0.85rem;
      border-radius: 6px;
      min-width: 100%;
    }
    
    .filter-btn {
      padding: 10px 16px;
      font-size: 0.85rem;
      border-radius: 6px;
    }
    
    .btn-reset {
      padding: 10px 16px;
      font-size: 0.85rem;
    }
    
    .reservations-content {
      padding: 16px;
      overflow-x: auto;
    }
    
    .reservations-table {
      min-width: 700px;
      font-size: 0.8rem;
    }
    
    .table-header th {
      padding: 10px 8px;
      font-size: 0.7rem;
    }
    
    .reservation-row td {
      padding: 10px 8px;
      font-size: 0.8rem;
    }
    
    .user-name {
      font-size: 0.85rem;
    }
    
    .room-badge {
      padding: 3px 8px;
      font-size: 0.7rem;
      border-radius: 8px;
    }
    
    .status-badge {
      padding: 3px 8px;
      font-size: 0.7rem;
      border-radius: 8px;
    }
    
    .time-info {
      font-size: 0.75rem;
    }
    
    .action-btn {
      padding: 4px 8px;
      font-size: 0.7rem;
      border-radius: 4px;
      margin-right: 4px;
    }
    
    .status-select {
      padding: 4px 8px;
      font-size: 0.75rem;
      border-radius: 4px;
    }
    
    .empty-state {
      padding: 40px 16px;
    }
    
    .empty-state-icon {
      font-size: 2.5rem;
      margin-bottom: 12px;
    }
    
    .empty-state-text {
      font-size: 0.95rem;
    }
  }
  
  @media (max-width: 1024px) {
    .filters-container {
      grid-template-columns: 1fr;
      gap: 8px;
    }
    
    .filter-btn {
      padding: 10px 16px;
    }
  }
  
  @media (max-width: 768px) {
    .reservations-table {
      font-size: 0.8rem;
    }
    
    .table-header th,
    .reservation-row td {
      padding: 10px 8px;
    }
    
    .action-controls {
      flex-direction: column;
      gap: 4px;
    }
    
    .action-btn {
      padding: 4px 8px;
      font-size: 0.7rem;
    }
  }
</style>

<div class="reservations-container">
  <div class="reservations-header">
    <h2 class="reservations-title">üìÖ ÏòàÏïΩ Í¥ÄÎ¶¨</h2>
    
    <!-- ÏÑúÎπÑÏä§ ÏÑ†ÌÉù ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò -->
    <div class="service-nav">
      <button onclick="loadReservationsTab('practice')" class="service-btn <%= service_type != 'makeup' ? 'active' : '' %>">
        üéπ Ïó∞ÏäµÏã§ ÏòàÏïΩ
      </button>
      <button onclick="loadReservationsTab('makeup')" class="service-btn <%= service_type == 'makeup' ? 'active' : '' %>">
        üìö Î≥¥Ï∂©ÏàòÏóÖ ÏòàÏïΩ
      </button>
    </div>
    
    <!-- Í≤ÄÏÉâ Î∞è ÌïÑÌÑ∞ -->
    <div class="filters-container">
      <input type="text" 
             id="reservation-search"
             placeholder="Ïù¥Î¶ÑÏù¥ÎÇò ÏïÑÏù¥ÎîîÎ°ú Í≤ÄÏÉâ..."
             class="search-input"
             onkeyup="window.searchReservations && window.searchReservations()">
      
      <select id="reservation-status" class="filter-select" onchange="window.filterReservations && window.filterReservations()">
        <option value="">Ï†ÑÏ≤¥ ÏÉÅÌÉú</option>
        <% if service_type == 'makeup' %>
          <option value="pending">ÏäπÏù∏ ÎåÄÍ∏∞</option>
          <option value="active">ÏàòÏóÖ ÎåÄÍ∏∞</option>
          <option value="completed">ÏôÑÎ£å</option>
          <option value="rejected">Í±∞Ï†àÎê®</option>
          <option value="cancelled">Ï∑®ÏÜå</option>
          <option value="no_show">ÎÖ∏Ïáº</option>
        <% else %>
          <option value="pending">ÎåÄÍ∏∞</option>
          <option value="active">Ïù¥Ïö© Ï†Ñ</option>
          <option value="completed">ÏôÑÎ£å</option>
          <option value="cancelled">Ï∑®ÏÜå</option>
          <option value="no_show">ÎÖ∏Ïáº</option>
        <% end %>
      </select>
      
      <input type="date" 
             id="reservation-date"
             class="filter-select"
             style="min-width: 140px;"
             onchange="window.filterReservations && window.filterReservations()">
      
      <button type="button" onclick="window.filterReservations && window.filterReservations()" class="filter-btn filter-btn-primary">
        Í≤ÄÏÉâ
      </button>
      
      <button type="button" onclick="window.resetReservationFilters && window.resetReservationFilters()" class="filter-btn filter-btn-secondary">
        Ï¥àÍ∏∞Ìôî
      </button>
    </div>
  </div>

  <!-- ÏùºÍ¥Ñ ÏûëÏóÖ ÏòÅÏó≠ -->
  <div id="bulk-actions" class="bulk-actions">
    <span id="selected-count" class="selected-count">0Í∞ú ÏÑ†ÌÉùÎê®</span>
    <button onclick="bulkDeleteReservations()" class="bulk-delete-btn">ÏÑ†ÌÉùÎêú ÏòàÏïΩ ÏÇ≠Ï†ú</button>
    <button onclick="cancelBulkSelection()" class="bulk-cancel-btn">ÏÑ†ÌÉù Ï∑®ÏÜå</button>
  </div>

  <div class="reservations-content">
    <% if reservations && reservations.any? %>
      <table class="reservations-table">
        <thead class="table-header">
          <tr>
            <th class="checkbox-column">
              <input type="checkbox" id="select-all" class="select-all-checkbox" onchange="toggleSelectAll()">
            </th>
            <th>Ïù¥Î¶Ñ</th>
            <th>ÏïÑÏù¥Îîî</th>
            <th><%= service_type == 'makeup' ? 'Îã¥Îãπ' : 'Ïó∞ÏäµÏã§' %></th>
            <th>ÎÇ†Ïßú</th>
            <th>ÏãúÍ∞Ñ</th>
            <th>ÏÉÅÌÉú</th>
            <th>Í¥ÄÎ¶¨</th>
          </tr>
        </thead>
        <tbody>
          <% reservations.each do |reservation| %>
            <% next unless reservation.user %>
            <tr class="reservation-row <%= 'pending-row' if reservation.status == 'pending' %>" 
                data-name="<%= reservation.user.name %>"
                data-username="<%= reservation.user.username %>"
                data-status="<%= reservation.status %>"
                data-date="<%= reservation.start_time&.strftime('%Y-%m-%d') || '' %>">
              
              <td class="checkbox-column">
                <input type="checkbox" class="reservation-checkbox" 
                       value="<%= reservation.id %>" 
                       data-service="<%= service_type %>"
                       onchange="updateBulkActions()">
              </td>
              <td>
                <% if service_type == 'makeup' && reservation.respond_to?(:lesson_content) && reservation.lesson_content.present? %>
                  <span class="user-name clickable" 
                        style="cursor: pointer; text-decoration: underline; color: #7c3aed;" 
                        onclick="window.showLessonContent('<%= reservation.id %>')">
                    <%= reservation.user.name %>
                  </span>
                <% else %>
                  <span class="user-name"><%= reservation.user.name %></span>
                <% end %>
              </td>
              <td><%= reservation.user.username %></td>
              <td>
                <% if service_type == 'makeup' %>
                  <div class="room-info">
                    <% # ÌöåÏõêÏùò Îã¥Îãπ ÏÑ†ÏÉùÎãò ÌëúÏãú %>
                    <% if reservation.user && reservation.user.teacher.present? %>
                      <%= reservation.user.teacher %>
                    <% else %>
                      <span style="color: #9ca3af;">ÎØ∏ÏßÄÏ†ï</span>
                    <% end %>
                  </div>
                <% else %>
                  <div class="room-info">
                    <%= reservation.room.number %>Î≤à
                    <% if reservation.room.respond_to?(:has_outlet) && reservation.room.has_outlet %>
                      <span class="outlet-icon" title="ÏΩòÏÑºÌä∏ ÏûàÏùå">üîå</span>
                    <% end %>
                  </div>
                <% end %>
              </td>
              <td><%= reservation.start_time&.strftime('%Y-%m-%d') || 'N/A' %></td>
              <td>
                <%= reservation.start_time&.strftime('%H:%M') || 'N/A' %> - <%= reservation.end_time&.strftime('%H:%M') || 'N/A' %>
              </td>
              <td>
                <% if service_type == 'makeup' %>
                  <% status_text = reservation.status_display %>
                  <% case reservation.status %>
                  <% when 'pending' %>
                    <span class="status-badge status-pending"><%= status_text %></span>
                  <% when 'active' %>
                    <span class="status-badge status-waiting"><%= status_text %></span>
                  <% when 'completed' %>
                    <span class="status-badge status-completed"><%= status_text %></span>
                  <% when 'cancelled' %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% when 'rejected' %>
                    <span class="status-badge status-rejected"><%= status_text %></span>
                  <% when 'no_show' %>
                    <span class="status-badge status-no-show"><%= status_text %></span>
                  <% else %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% end %>
                <% else %>
                  <% # Ïó∞ÏäµÏã§ ÏòàÏïΩ - status_display ÏÇ¨Ïö© %>
                  <% status_text = reservation.status_display %>
                  <% case reservation.status %>
                  <% when 'active', 'in_use' %>
                    <% if status_text == 'Ïù¥Ïö© Ï†Ñ' %>
                      <span class="status-badge status-active"><%= status_text %></span>
                    <% elsif status_text == 'Ïù¥Ïö© Ï§ë' %>
                      <span class="status-badge status-in-use"><%= status_text %></span>
                    <% else %>
                      <span class="status-badge status-completed"><%= status_text %></span>
                    <% end %>
                  <% when 'completed' %>
                    <span class="status-badge status-completed"><%= status_text %></span>
                  <% when 'cancelled' %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% when 'no_show' %>
                    <span class="status-badge status-no-show"><%= status_text %></span>
                  <% else %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% end %>
                <% end %>
              </td>
              <td>
                <div class="action-controls">
                  <select onchange="updateReservationStatus(<%= reservation.id %>, this.value, '<%= service_type %>')" 
                          class="status-select">
                    <% if service_type == 'makeup' %>
                      <option value="pending" <%= 'selected' if reservation.status == 'pending' %>>ÏäπÏù∏ ÎåÄÍ∏∞</option>
                      <option value="active" <%= 'selected' if reservation.status == 'active' %>>ÏàòÏóÖ ÎåÄÍ∏∞</option>
                      <option value="completed" <%= 'selected' if reservation.status == 'completed' %>>ÏôÑÎ£å</option>
                      <option value="rejected" <%= 'selected' if reservation.status == 'rejected' %>>Í±∞Ï†àÎê®</option>
                      <option value="cancelled" <%= 'selected' if reservation.status == 'cancelled' %>>Ï∑®ÏÜå</option>
                      <option value="no_show" <%= 'selected' if reservation.status == 'no_show' %>>ÎÖ∏Ïáº</option>
                    <% else %>
                      <option value="pending" <%= 'selected' if reservation.status == 'pending' %>>ÎåÄÍ∏∞</option>
                      <option value="active" <%= 'selected' if reservation.status == 'active' %>>Ïù¥Ïö© Ï†Ñ</option>
                      <option value="completed" <%= 'selected' if reservation.status == 'completed' %>>ÏôÑÎ£å</option>
                      <option value="cancelled" <%= 'selected' if reservation.status == 'cancelled' %>>Ï∑®ÏÜå</option>
                      <option value="no_show" <%= 'selected' if reservation.status == 'no_show' %>>ÎÖ∏Ïáº</option>
                    <% end %>
                  </select>
                  
                  <% if service_type == 'makeup' && reservation.status == 'pending' %>
                    <button onclick="updateReservationStatus(<%= reservation.id %>, 'active', 'makeup')" 
                            class="action-btn btn-approve">ÏäπÏù∏</button>
                    <button onclick="updateReservationStatus(<%= reservation.id %>, 'rejected', 'makeup')" 
                            class="action-btn btn-reject">Í±∞Ï†à</button>
                  <% end %>
                  
                  <button onclick="deleteReservation(<%= reservation.id %>, '<%= service_type %>')" 
                          class="action-btn btn-delete">ÏÇ≠Ï†ú</button>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% else %>
      <div class="empty-state">
        <div class="empty-state-icon">üìÖ</div>
        <div class="empty-state-text">ÏòàÏïΩÏù¥ ÏóÜÏäµÎãàÎã§</div>
      </div>
    <% end %>
  </div>
</div>

<script>
(function() {
  // ÏùºÍ¥Ñ ÏÑ†ÌÉù Í¥ÄÎ†® Ìï®ÏàòÎì§
  window.toggleSelectAll = function() {
    const selectAllCheckbox = document.getElementById('select-all');
    const checkboxes = document.querySelectorAll('.reservation-checkbox');
    
    checkboxes.forEach(checkbox => {
      checkbox.checked = selectAllCheckbox.checked;
    });
    
    updateBulkActions();
  };
  
  window.updateBulkActions = function() {
    const checkboxes = document.querySelectorAll('.reservation-checkbox');
    const checkedBoxes = document.querySelectorAll('.reservation-checkbox:checked');
    const bulkActions = document.getElementById('bulk-actions');
    const selectedCount = document.getElementById('selected-count');
    const selectAllCheckbox = document.getElementById('select-all');
    
    if (checkedBoxes.length > 0) {
      bulkActions.classList.add('show');
      selectedCount.textContent = `${checkedBoxes.length}Í∞ú ÏÑ†ÌÉùÎê®`;
    } else {
      bulkActions.classList.remove('show');
    }
    
    // Ï†ÑÏ≤¥ ÏÑ†ÌÉù Ï≤¥ÌÅ¨Î∞ïÏä§ ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
    if (checkedBoxes.length === checkboxes.length && checkboxes.length > 0) {
      selectAllCheckbox.checked = true;
      selectAllCheckbox.indeterminate = false;
    } else if (checkedBoxes.length > 0) {
      selectAllCheckbox.checked = false;
      selectAllCheckbox.indeterminate = true;
    } else {
      selectAllCheckbox.checked = false;
      selectAllCheckbox.indeterminate = false;
    }
  };
  
  window.cancelBulkSelection = function() {
    const checkboxes = document.querySelectorAll('.reservation-checkbox');
    const selectAllCheckbox = document.getElementById('select-all');
    
    checkboxes.forEach(checkbox => {
      checkbox.checked = false;
    });
    
    selectAllCheckbox.checked = false;
    selectAllCheckbox.indeterminate = false;
    
    updateBulkActions();
  };
  
  window.bulkDeleteReservations = function() {
    const checkedBoxes = document.querySelectorAll('.reservation-checkbox:checked');
    
    if (checkedBoxes.length === 0) {
      alert('ÏÇ≠Ï†úÌï† ÏòàÏïΩÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
      return;
    }
    
    const confirmMessage = `ÏÑ†ÌÉùÎêú ${checkedBoxes.length}Í∞úÏùò ÏòàÏïΩÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ±∞ÏÇÄÏäµÎãàÍπå?\nÏù¥ ÏûëÏóÖÏùÄ ÎêòÎèåÎ¶¥ Ïàò ÏóÜÏäµÎãàÎã§.`;
    
    if (!confirm(confirmMessage)) {
      return;
    }
    
    // ÏÑ†ÌÉùÎêú ÏòàÏïΩ IDÎì§Í≥º ÏÑúÎπÑÏä§ ÌÉÄÏûÖ ÏàòÏßë
    const reservationIds = [];
    const serviceTypes = [];
    
    checkedBoxes.forEach(checkbox => {
      reservationIds.push(parseInt(checkbox.value));
      serviceTypes.push(checkbox.getAttribute('data-service'));
    });
    
    // ÏÑúÎπÑÏä§ ÌÉÄÏûÖÏù¥ ÎèôÏùºÌïúÏßÄ ÌôïÏù∏
    const uniqueServiceTypes = [...new Set(serviceTypes)];
    if (uniqueServiceTypes.length > 1) {
      alert('ÏÑúÎ°ú Îã§Î•∏ ÏÑúÎπÑÏä§Ïùò ÏòàÏïΩÏùÑ ÎèôÏãúÏóê ÏÇ≠Ï†úÌï† Ïàò ÏóÜÏäµÎãàÎã§.');
      return;
    }
    
    const serviceType = uniqueServiceTypes[0];
    
    // ÏÑúÎ≤ÑÎ°ú ÏùºÍ¥Ñ ÏÇ≠Ï†ú ÏöîÏ≤≠ Ï†ÑÏÜ°
    fetch('/admin/reservations/bulk_delete', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({
        reservation_ids: reservationIds,
        service: serviceType
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert(`${data.deleted_count}Í∞úÏùò ÏòàÏïΩÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.`);
        // ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®
        if (window.loadReservationsTab) {
          window.loadReservationsTab(serviceType);
        } else {
          location.reload();
        }
      } else {
        alert('ÏÇ≠Ï†ú Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + (data.error || 'Ïïå Ïàò ÏóÜÎäî Ïò§Î•ò'));
      }
    })
    .catch(error => {
      console.error('Bulk delete error:', error);
      alert('ÏÇ≠Ï†ú Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    });
  };
  // Í≤ÄÏÉâ Í∏∞Îä•
  window.searchReservations = function() {
    const searchInput = document.getElementById('reservation-search');
    if (!searchInput) return;
    
    const searchTerm = searchInput.value.toLowerCase();
    const rows = document.querySelectorAll('.reservation-row');
    
    rows.forEach(row => {
      const name = (row.getAttribute('data-name') || '').toLowerCase();
      const username = (row.getAttribute('data-username') || '').toLowerCase();
      
      if (searchTerm === '' || name.includes(searchTerm) || username.includes(searchTerm)) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  };

  // ÌïÑÌÑ∞ÎßÅ Í∏∞Îä• 
  window.filterReservations = function() {
    const statusFilter = document.getElementById('reservation-status')?.value || '';
    const dateFilter = document.getElementById('reservation-date')?.value || '';
    const searchTerm = (document.getElementById('reservation-search')?.value || '').toLowerCase();
    const rows = document.querySelectorAll('.reservation-row');
    
    rows.forEach(row => {
      let visible = true;
      
      // Í≤ÄÏÉâÏñ¥ ÌïÑÌÑ∞
      if (searchTerm) {
        const name = (row.getAttribute('data-name') || '').toLowerCase();
        const username = (row.getAttribute('data-username') || '').toLowerCase();
        if (!name.includes(searchTerm) && !username.includes(searchTerm)) {
          visible = false;
        }
      }
      
      // ÏÉÅÌÉú ÌïÑÌÑ∞
      if (statusFilter && visible) {
        const status = row.getAttribute('data-status');
        if (status !== statusFilter) {
          visible = false;
        }
      }
      
      // ÎÇ†Ïßú ÌïÑÌÑ∞
      if (dateFilter && visible) {
        const date = row.getAttribute('data-date');
        if (date !== dateFilter) {
          visible = false;
        }
      }
      
      row.style.display = visible ? '' : 'none';
    });
  };

  // Ï¥àÍ∏∞Ìôî Í∏∞Îä•
  window.resetReservationFilters = function() {
    const searchInput = document.getElementById('reservation-search');
    const statusSelect = document.getElementById('reservation-status');
    const dateInput = document.getElementById('reservation-date');
    
    if (searchInput) searchInput.value = '';
    if (statusSelect) statusSelect.value = '';
    if (dateInput) dateInput.value = '';
    
    const rows = document.querySelectorAll('.reservation-row');
    rows.forEach(row => {
      row.style.display = '';
    });
  };

  // ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏ (Turbo Î∞©Ïãù)
  window.updateReservationStatus = function(reservationId, status, service) {
    const selectElement = event.target;
    const originalValue = selectElement.value;
    
    fetch(`/admin/reservations/${reservationId}/update_status`, {
      method: 'PATCH',
      headers: {
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ status: status, service: service })
    }).then(response => {
      if (response.ok) {
        // ÏÉÅÌÉú Î±ÉÏßÄ ÏóÖÎç∞Ïù¥Ìä∏
        const row = selectElement.closest('tr');
        const statusBadge = row.querySelector('.status-badge');
        if (statusBadge) {
          // ÏÉÅÌÉúÏóê Îî∞Î•∏ Î±ÉÏßÄ ÌÅ¥ÎûòÏä§ Î∞è ÌÖçÏä§Ìä∏ ÏóÖÎç∞Ïù¥Ìä∏
          const statusTexts = {
            'pending': 'ÏäπÏù∏ ÎåÄÍ∏∞',
            'active': service === 'makeup' ? 'ÏàòÏóÖ ÎåÄÍ∏∞' : 'Ïù¥Ïö© Ï†Ñ',
            'completed': 'ÏôÑÎ£å',
            'cancelled': 'Ï∑®ÏÜå',
            'rejected': 'Í±∞Ï†àÎê®',
            'no_show': 'ÎÖ∏Ïáº'
          };
          
          // Í∏∞Ï°¥ ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ï†úÍ±∞
          statusBadge.className = 'status-badge status-' + status;
          statusBadge.textContent = statusTexts[status] || status;
        }
        
        // ÏäπÏù∏/Í±∞Ï†à Î≤ÑÌäº Ïà®Í∏∞Í∏∞ (Î≥¥Ï∂©ÏàòÏóÖÏù¥Í≥† pendingÏóêÏÑú Î≥ÄÍ≤ΩÎêú Í≤ΩÏö∞)
        if (service === 'makeup' && originalValue === 'pending' && status !== 'pending') {
          const approveBtn = row.querySelector('.btn-approve');
          const rejectBtn = row.querySelector('.btn-reject');
          if (approveBtn) approveBtn.style.display = 'none';
          if (rejectBtn) rejectBtn.style.display = 'none';
        }
      } else {
        alert('ÏÉÅÌÉú Î≥ÄÍ≤ΩÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        selectElement.value = originalValue; // ÏõêÎûò Í∞íÏúºÎ°ú Î≥µÍµ¨
      }
    }).catch(error => {
      console.error('Error:', error);
      alert('ÏÉÅÌÉú Î≥ÄÍ≤ΩÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      selectElement.value = originalValue; // ÏõêÎûò Í∞íÏúºÎ°ú Î≥µÍµ¨
    });
  };

  // ÏòàÏïΩ ÏÇ≠Ï†ú
  window.deleteReservation = function(reservationId, service) {
    if (confirm('Ï†ïÎßêÎ°ú Ïù¥ ÏòàÏïΩÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?')) {
      fetch(`/admin/reservations/${reservationId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ service: service })
      }).then(response => {
        if (response.ok) {
          window.loadReservationsTab(service);
        } else {
          alert('ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        }
      }).catch(error => {
        console.error('Error:', error);
        alert('ÏÇ≠Ï†úÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
      });
    }
  };

  console.log('ÏòàÏïΩ Í¥ÄÎ¶¨ Ìï®ÏàòÎì§Ïù¥ Î°úÎìúÎêòÏóàÏäµÎãàÎã§.');
  
})();

// Î≥¥Ï∂©ÏàòÏóÖ ÎÇ¥Ïö© Î™®Îã¨ ÌëúÏãú - window Í∞ùÏ≤¥Ïóê Î™ÖÏãúÏ†ÅÏúºÎ°ú Ìï†Îãπ
window.showLessonContent = function(reservationId) {
  // AJAXÎ°ú ÏòàÏïΩ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
  fetch('/admin/reservations/' + reservationId + '/lesson_content')
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Î™®Îã¨ ÎÇ¥Ïö© ÏóÖÎç∞Ïù¥Ìä∏
        document.getElementById('modal-user-name').textContent = data.user_name;
        document.getElementById('modal-date').textContent = data.date;
        document.getElementById('modal-time').textContent = data.time;
        document.getElementById('modal-lesson-content').textContent = data.lesson_content || 'ÎÇ¥Ïö©Ïù¥ ÏóÜÏäµÎãàÎã§.';
        
        // Î™®Îã¨ ÌëúÏãú
        document.getElementById('lesson-content-modal').classList.add('show');
      } else {
        alert('ÏòàÏïΩ Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    });
}

// Î™®Îã¨ Îã´Í∏∞ - window Í∞ùÏ≤¥Ïóê Î™ÖÏãúÏ†ÅÏúºÎ°ú Ìï†Îãπ
window.closeLessonModal = function() {
  var modal = document.getElementById('lesson-content-modal');
  if (modal) {
    modal.classList.remove('show');
  }
}
</script>

<!-- Î≥¥Ï∂©ÏàòÏóÖ ÎÇ¥Ïö© Î™®Îã¨ -->
<div id="lesson-content-modal" class="modal-overlay" onclick="window.closeLessonModal()">
  <div class="modal-content" onclick="event.stopPropagation()">
    <div class="modal-header">
      <h3 class="modal-title">Î≥¥Ï∂©ÏàòÏóÖ ÎÇ¥Ïö©</h3>
      <button class="modal-close" onclick="window.closeLessonModal()">&times;</button>
    </div>
    <div class="modal-body">
      <div class="modal-info">
        <div class="modal-info-row">
          <span class="modal-info-label" data-icon="user">ÌöåÏõêÎ™Ö</span>
          <span class="modal-info-value" id="modal-user-name"></span>
        </div>
        <div class="modal-info-row">
          <span class="modal-info-label" data-icon="date">ÎÇ†Ïßú</span>
          <span class="modal-info-value" id="modal-date"></span>
        </div>
        <div class="modal-info-row">
          <span class="modal-info-label" data-icon="time">ÏãúÍ∞Ñ</span>
          <span class="modal-info-value" id="modal-time"></span>
        </div>
      </div>
      <div class="lesson-content-section">
        <div class="lesson-content-title">ÏàòÏóÖ ÏöîÏ≤≠ ÎÇ¥Ïö©</div>
        <div class="lesson-content-text" id="modal-lesson-content"></div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Î™®Îã¨ Ïä§ÌÉÄÏùº - Í∞úÏÑ†Îêú Î≤ÑÏ†Ñ */
  .modal-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(15, 23, 42, 0.7);
    backdrop-filter: blur(4px);
    z-index: 1000;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.3s ease;
  }
  
  .modal-overlay.show {
    display: flex;
    opacity: 1;
  }
  
  .modal-content {
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border-radius: 20px;
    padding: 0;
    max-width: 550px;
    width: 95%;
    max-height: 80vh;
    overflow: hidden;
    box-shadow: 
      0 25px 50px -12px rgba(0, 0, 0, 0.25),
      0 0 0 1px rgba(255, 255, 255, 0.1);
    transform: scale(0.95);
    transition: transform 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  .modal-overlay.show .modal-content {
    transform: scale(1);
  }
  
  .modal-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 25px 30px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0;
    border-radius: 20px 20px 0 0;
  }
  
  .modal-title {
    font-size: 1.4rem;
    font-weight: 700;
    color: white;
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .modal-title::before {
    content: "üìö";
    font-size: 1.2rem;
  }
  
  .modal-close {
    cursor: pointer;
    font-size: 1.8rem;
    color: rgba(255, 255, 255, 0.8);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    padding: 0;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }
  
  .modal-close:hover {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    transform: scale(1.1);
  }
  
  .modal-body {
    padding: 30px;
    color: #475569;
    line-height: 1.7;
  }
  
  .modal-info {
    background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
    border-radius: 16px;
    padding: 25px;
    margin-bottom: 25px;
    border: 1px solid rgba(148, 163, 184, 0.2);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }
  
  .modal-info-row {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
    padding: 8px 0;
    border-bottom: 1px solid rgba(148, 163, 184, 0.1);
  }
  
  .modal-info-row:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }
  
  .modal-info-label {
    font-weight: 700;
    color: #334155;
    min-width: 100px;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.95rem;
  }
  
  .modal-info-label::before {
    font-size: 1rem;
  }
  
  .modal-info-label[data-icon="user"]::before { content: "üë§"; }
  .modal-info-label[data-icon="date"]::before { content: "üìÖ"; }
  .modal-info-label[data-icon="time"]::before { content: "‚è∞"; }
  
  .modal-info-value {
    color: #64748b;
    font-weight: 500;
    font-size: 1rem;
  }
  
  .lesson-content-section {
    margin-top: 15px;
  }
  
  .lesson-content-title {
    font-size: 1.1rem;
    font-weight: 700;
    color: #334155;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    gap: 10px;
  }
  
  .lesson-content-title::before {
    content: "‚úèÔ∏è";
    font-size: 1rem;
  }
  
  .lesson-content-text {
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 20px;
    min-height: 120px;
    font-size: 1rem;
    line-height: 1.6;
    color: #475569;
    white-space: pre-wrap;
    word-wrap: break-word;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.02);
    position: relative;
  }
  
  .lesson-content-text:empty::before {
    content: "ÏàòÏóÖ ÎÇ¥Ïö©Ïù¥ ÏóÜÏäµÎãàÎã§";
    color: #94a3b8;
    font-style: italic;
  }
  
  /* Î™®Î∞îÏùº ÏµúÏ†ÅÌôî */
  @media (max-width: 640px) {
    .modal-content {
      width: 95%;
      max-width: none;
      margin: 20px;
      border-radius: 16px;
    }
    
    .modal-header {
      padding: 20px 25px;
      border-radius: 16px 16px 0 0;
    }
    
    .modal-title {
      font-size: 1.2rem;
    }
    
    .modal-body {
      padding: 25px 20px;
    }
    
    .modal-info {
      padding: 20px;
      margin-bottom: 20px;
    }
    
    .modal-info-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 5px;
    }
    
    .modal-info-label {
      min-width: auto;
    }
  }
</style>