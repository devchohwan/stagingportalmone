<style>
  .reservations-container {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: 1px solid #e2e8f0;
    overflow: hidden;
  }
  
  .reservations-header {
    padding: 25px;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .reservations-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: #2d3748;
    margin-bottom: 20px;
  }
  
  .service-nav {
    display: flex;
    gap: 5px;
    margin-bottom: 20px;
    background: #f7fafc;
    padding: 5px;
    border-radius: 10px;
  }
  
  .service-btn {
    padding: 10px 16px;
    border-radius: 6px;
    font-weight: 600;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    background: transparent;
    color: #4a5568;
  }
  
  .service-btn:hover {
    background: #edf2f7;
    color: #2d3748;
  }
  
  .service-btn.active {
    background: #ffffff;
    color: #f093fb;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .filters-container {
    display: grid;
    grid-template-columns: 1fr auto auto auto auto;
    gap: 12px;
    align-items: center;
  }
  
  .search-input {
    padding: 12px 16px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 0.9rem;
    transition: all 0.3s ease;
  }
  
  .filter-select {
    padding: 12px 16px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 0.9rem;
    background: white;
    color: #4a5568;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 120px;
  }
  
  .filter-btn {
    padding: 12px 20px;
    border: none;
    border-radius: 8px;
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .filter-btn-primary {
    background: linear-gradient(135deg, #f093fb, #f5576c);
    color: white;
  }
  
  .filter-btn-secondary {
    background: #f7fafc;
    color: #4a5568;
    border: 1px solid #e2e8f0;
  }
  
  .reservations-content {
    padding: 25px;
  }
  
  .reservations-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }
  
  .table-header {
    background: #f8fafc;
  }
  
  .table-header th {
    padding: 15px 12px;
    text-align: left;
    font-weight: 600;
    font-size: 0.8rem;
    color: #4a5568;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .reservation-row {
    transition: all 0.3s ease;
  }
  
  .reservation-row:hover {
    background: #f8fafc;
  }
  
  .reservation-row td {
    padding: 15px 12px;
    border-bottom: 1px solid #f1f5f9;
    font-size: 0.9rem;
  }
  
  .user-name {
    font-weight: 600;
    color: #2d3748;
  }
  
  .room-info {
    display: flex;
    align-items: center;
    gap: 6px;
  }
  
  .status-badge {
    display: inline-flex;
    align-items: center;
    padding: 4px 10px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
  }
  
  .status-pending {
    background: #fef3c7;
    color: #92400e;
  }
  
  .status-active {
    background: #dcfce7;
    color: #166534;
  }
  
  .status-completed {
    background: #e0e7ff;
    color: #3730a3;
  }
  
  .status-cancelled {
    background: #f3f4f6;
    color: #374151;
  }
  
  .status-rejected {
    background: #fee2e2;
    color: #991b1b;
  }
  
  .status-no-show {
    background: #fecaca;
    color: #991b1b;
  }
  
  .action-controls {
    display: flex;
    align-items: center;
    gap: 8px;
    flex-wrap: wrap;
  }
  
  .action-btn {
    padding: 6px 12px;
    border: none;
    border-radius: 6px;
    font-size: 0.8rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .btn-delete {
    background: #f59e0b;
    color: white;
  }
  
  .btn-delete:hover {
    background: #d97706;
    transform: translateY(-1px);
  }
  
  .btn-approve {
    background: #10b981;
    color: white;
  }
  
  .btn-approve:hover {
    background: #059669;
    transform: translateY(-1px);
  }
  
  .btn-reject {
    background: #ef4444;
    color: white;
  }
  
  .btn-reject:hover {
    background: #dc2626;
    transform: translateY(-1px);
  }
  
  .status-select {
    padding: 6px 10px;
    border: 1px solid #e2e8f0;
    border-radius: 6px;
    font-size: 0.8rem;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .empty-state {
    text-align: center;
    padding: 60px 20px;
    color: #9ca3af;
  }
  
  .empty-state-icon {
    font-size: 3rem;
    margin-bottom: 16px;
  }
  
  .empty-state-text {
    font-size: 1.1rem;
    font-weight: 500;
  }
</style>

<div class="reservations-container">
  <div class="reservations-header">
    <h2 class="reservations-title">📅 예약 관리</h2>
    
    <div class="service-nav">
      <button onclick="loadReservationsTab('practice')" class="service-btn <%= service_type != 'makeup' ? 'active' : '' %>">
        🎹 연습실 예약
      </button>
      <button onclick="loadReservationsTab('makeup')" class="service-btn <%= service_type == 'makeup' ? 'active' : '' %>">
        📚 보충수업 예약
      </button>
    </div>
    
    <div class="filters-container">
      <input type="text" 
             id="reservation-search"
             placeholder="이름이나 아이디로 검색..."
             class="search-input"
             onkeyup="window.searchReservations && window.searchReservations()">
      
      <select id="reservation-status" class="filter-select" onchange="window.filterReservations && window.filterReservations()">
        <option value="">전체 상태</option>
        <% if service_type == 'makeup' %>
          <option value="pending">승인 대기</option>
          <option value="active">수업 대기</option>
          <option value="completed">완료</option>
          <option value="rejected">거절됨</option>
          <option value="cancelled">취소</option>
          <option value="no_show">노쇼</option>
        <% else %>
          <option value="pending">대기</option>
          <option value="active">이용 전</option>
          <option value="completed">완료</option>
          <option value="cancelled">취소</option>
          <option value="no_show">노쇼</option>
        <% end %>
      </select>
      
      <input type="date" 
             id="reservation-date"
             class="filter-select"
             style="min-width: 140px;"
             onchange="window.filterReservations && window.filterReservations()">
      
      <button type="button" onclick="window.filterReservations && window.filterReservations()" class="filter-btn filter-btn-primary">
        검색
      </button>
      
      <button type="button" onclick="window.resetReservationFilters && window.resetReservationFilters()" class="filter-btn filter-btn-secondary">
        초기화
      </button>
    </div>
  </div>

  <div class="reservations-content">
    <% if reservations && reservations.any? %>
      <table class="reservations-table">
        <thead class="table-header">
          <tr>
            <th>이름</th>
            <th>아이디</th>
            <th><%= service_type == 'makeup' ? '담당' : '연습실' %></th>
            <th>날짜</th>
            <th>시간</th>
            <th>상태</th>
            <th>신청시간</th>
            <th>관리</th>
          </tr>
        </thead>
        <tbody>
          <% reservations.each do |reservation| %>
            <% next unless reservation.user %>
            <tr class="reservation-row" 
                data-name="<%= reservation.user.name %>"
                data-username="<%= reservation.user.username %>"
                data-status="<%= reservation.status %>"
                data-date="<%= reservation.start_time&.strftime('%Y-%m-%d') || '' %>"
                data-reservation-id="<%= reservation.id %>">
              
              <td>
                <% if service_type == 'makeup' && reservation.respond_to?(:lesson_content) && reservation.lesson_content.present? %>
                  <span class="user-name clickable" 
                        style="cursor: pointer; text-decoration: underline; color: #7c3aed;" 
                        onclick="window.showLessonContent('<%= reservation.id %>')">
                    <%= reservation.user.name %>
                  </span>
                <% else %>
                  <span class="user-name"><%= reservation.user.name %></span>
                <% end %>
              </td>
              <td><%= reservation.user.username %></td>
              <td>
                <% if service_type == 'makeup' %>
                  <div class="room-info">
                    <% if reservation.user && reservation.user.teacher.present? %>
                      <%= reservation.user.teacher %>
                    <% else %>
                      <span style="color: #9ca3af;">미지정</span>
                    <% end %>
                  </div>
                <% else %>
                  <div class="room-info">
                    <%= reservation.room.number %>번
                    <% if reservation.room.respond_to?(:has_outlet) && reservation.room.has_outlet %>
                      <span class="outlet-icon" title="콘센트 있음">🔌</span>
                    <% end %>
                  </div>
                <% end %>
              </td>
              <td><%= reservation.start_time&.strftime('%Y-%m-%d') || 'N/A' %></td>
              <td>
                <% if service_type == 'makeup' && reservation.start_time && [4, 5].include?(reservation.start_time.wday) %>
                  <%= reservation.start_time.strftime('%H:%M') %> - <%= (reservation.start_time + 50.minutes).strftime('%H:%M') %>
                <% else %>
                  <%= reservation.start_time&.strftime('%H:%M') || 'N/A' %> - <%= reservation.end_time&.strftime('%H:%M') || 'N/A' %>
                <% end %>
              </td>
              <td>
                <% if service_type == 'makeup' %>
                  <% status_text = reservation.status_display %>
                  <% case reservation.status %>
                  <% when 'pending' %>
                    <span class="status-badge status-pending"><%= status_text %></span>
                  <% when 'active' %>
                    <span class="status-badge status-active"><%= status_text %></span>
                  <% when 'completed' %>
                    <span class="status-badge status-completed"><%= status_text %></span>
                  <% when 'cancelled' %>
                    <% if reservation.cancellation_reason.present? %>
                      <span class="status-badge status-cancelled clickable" 
                            style="cursor: pointer; text-decoration: underline;" 
                            onclick="window.showMakeupCancellationReason('<%= reservation.id %>')">
                        <%= status_text %>
                      </span>
                    <% else %>
                      <span class="status-badge status-cancelled"><%= status_text %></span>
                    <% end %>
                  <% when 'rejected' %>
                    <span class="status-badge status-rejected"><%= status_text %></span>
                  <% when 'no_show' %>
                    <span class="status-badge status-no-show"><%= status_text %></span>
                  <% else %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% end %>
                <% else %>
                  <% status_text = reservation.status_display %>
                  <% case reservation.status %>
                  <% when 'active', 'in_use' %>
                    <span class="status-badge status-active"><%= status_text %></span>
                  <% when 'completed' %>
                    <span class="status-badge status-completed"><%= status_text %></span>
                  <% when 'cancelled' %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% when 'no_show' %>
                    <span class="status-badge status-no-show"><%= status_text %></span>
                  <% else %>
                    <span class="status-badge status-cancelled"><%= status_text %></span>
                  <% end %>
                <% end %>
              </td>
              <td style="font-size: 0.75rem; color: #6b7280;">
                <div><%= reservation.created_at.strftime('%m월 %d일') %></div>
                <div style="color: #9ca3af;"><%= reservation.created_at.strftime('%H시 %M분') %></div>
              </td>
              <td>
                <div class="action-controls">
                  <%= select_tag :status,
                      options_for_select(
                        service_type == 'makeup' ? 
                          [['승인 대기', 'pending'], ['수업 대기', 'active'], ['완료', 'completed'], 
                           ['거절됨', 'rejected'], ['취소', 'cancelled'], ['노쇼', 'no_show']] :
                          [['대기', 'pending'], ['이용 전', 'active'], ['완료', 'completed'],
                           ['취소', 'cancelled'], ['노쇼', 'no_show']],
                        reservation.status
                      ),
                      onchange: "updateReservationStatusSmooth(#{reservation.id}, this.value, '#{service_type}', this)",
                      class: "status-select" %>
                  
                  <% if service_type == 'makeup' && reservation.status == 'pending' %>
                    <button onclick="approveReservationSmooth(<%= reservation.id %>, 'makeup', event)" 
                            class="action-btn btn-approve">승인</button>
                    <button onclick="rejectReservationSmooth(<%= reservation.id %>, 'makeup', event)" 
                            class="action-btn btn-reject">거절</button>
                  <% end %>
                  
                  <button onclick="deleteReservationSmooth(<%= reservation.id %>, '<%= service_type %>', event)" 
                          class="action-btn btn-delete">삭제</button>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% else %>
      <div class="empty-state">
        <div class="empty-state-icon">📅</div>
        <div class="empty-state-text">예약이 없습니다</div>
      </div>
    <% end %>
  </div>
</div>

<script>
(function() {
  // 검색 기능
  window.searchReservations = function() {
    const searchInput = document.getElementById('reservation-search');
    if (!searchInput) return;
    
    const searchTerm = searchInput.value.toLowerCase();
    const rows = document.querySelectorAll('.reservation-row');
    
    rows.forEach(row => {
      const name = (row.getAttribute('data-name') || '').toLowerCase();
      const username = (row.getAttribute('data-username') || '').toLowerCase();
      
      if (searchTerm === '' || name.includes(searchTerm) || username.includes(searchTerm)) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  };

  // 필터링 기능 
  window.filterReservations = function() {
    const statusFilter = document.getElementById('reservation-status')?.value || '';
    const dateFilter = document.getElementById('reservation-date')?.value || '';
    const searchTerm = (document.getElementById('reservation-search')?.value || '').toLowerCase();
    const rows = document.querySelectorAll('.reservation-row');
    
    rows.forEach(row => {
      let visible = true;
      
      if (searchTerm) {
        const name = (row.getAttribute('data-name') || '').toLowerCase();
        const username = (row.getAttribute('data-username') || '').toLowerCase();
        if (!name.includes(searchTerm) && !username.includes(searchTerm)) {
          visible = false;
        }
      }
      
      if (statusFilter && visible) {
        const status = row.getAttribute('data-status');
        if (status !== statusFilter) {
          visible = false;
        }
      }
      
      if (dateFilter && visible) {
        const date = row.getAttribute('data-date');
        if (date !== dateFilter) {
          visible = false;
        }
      }
      
      row.style.display = visible ? '' : 'none';
    });
  };

  // 초기화 기능
  window.resetReservationFilters = function() {
    const searchInput = document.getElementById('reservation-search');
    const statusSelect = document.getElementById('reservation-status');
    const dateInput = document.getElementById('reservation-date');
    
    if (searchInput) searchInput.value = '';
    if (statusSelect) statusSelect.value = '';
    if (dateInput) dateInput.value = '';
    
    const rows = document.querySelectorAll('.reservation-row');
    rows.forEach(row => {
      row.style.display = '';
    });
  };

  // 상태 업데이트 - 부드러운 업데이트
  window.updateReservationStatusSmooth = function(reservationId, status, service, selectElement) {
    const originalValue = selectElement.value;
    const row = selectElement.closest('tr');
    
    // 로딩 상태 표시
    selectElement.disabled = true;
    selectElement.style.opacity = '0.6';
    
    fetch(`/admin/reservations/${reservationId}/update_status`, {
      method: 'PATCH',
      headers: {
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ status: status, service: service })
    }).then(response => {
      if (response.ok) {
        // 상태 배지 업데이트
        const statusBadge = row.querySelector('.status-badge');
        if (statusBadge) {
          const statusTexts = {
            'pending': '승인 대기',
            'active': service === 'makeup' ? '수업 대기' : '이용 전',
            'completed': '완료',
            'cancelled': '취소',
            'rejected': '거절됨',
            'no_show': '노쇼'
          };
          
          // 부드러운 전환 애니메이션
          statusBadge.style.transition = 'all 0.3s ease';
          statusBadge.style.transform = 'scale(1.1)';
          
          setTimeout(() => {
            // status의 밑줄을 하이픈으로 변환
            const cssClass = status.replace('_', '-');
            statusBadge.className = 'status-badge status-' + cssClass;
            statusBadge.textContent = statusTexts[status] || status;
            statusBadge.style.transform = 'scale(1)';
          }, 150);
        }
        
        // data-status 업데이트
        row.setAttribute('data-status', status);
        
      } else {
        alert('상태 변경에 실패했습니다.');
        selectElement.value = originalValue;
      }
    }).catch(error => {
      console.error('Error:', error);
      alert('상태 변경에 실패했습니다.');
      selectElement.value = originalValue;
    }).finally(() => {
      selectElement.disabled = false;
      selectElement.style.opacity = '1';
    });
  };

  // 예약 삭제 - 부드러운 애니메이션과 함께
  window.deleteReservationSmooth = function(reservationId, service, event) {
    if (confirm('정말로 이 예약을 삭제하시겠습니까?')) {
      const button = event ? event.currentTarget : null;
      const row = button ? button.closest('tr') : document.querySelector(`tr[data-reservation-id="${reservationId}"]`);
      
      if (button) {
        button.disabled = true;
        button.textContent = '처리중...';
        button.style.background = '#9ca3af';
        button.style.cursor = 'not-allowed';
      }
      
      fetch(`/admin/reservations/${reservationId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ service: service })
      }).then(response => {
        if (response.ok) {
          if (row) {
            // 부드러운 페이드 아웃 애니메이션
            row.style.transition = 'all 0.5s ease-out';
            row.style.opacity = '0';
            row.style.transform = 'translateX(-20px)';
            row.style.backgroundColor = '#fee2e2';
            
            // 애니메이션 완료 후 행 제거
            setTimeout(() => {
              row.remove();
              
              // 테이블이 비어있으면 empty state 표시
              const tbody = document.querySelector('.reservations-table tbody');
              if (tbody && tbody.children.length === 0) {
                const tableContainer = document.querySelector('.reservations-content');
                if (tableContainer) {
                  tableContainer.innerHTML = `
                    <div class="empty-state">
                      <div class="empty-state-icon">📅</div>
                      <div class="empty-state-text">예약이 없습니다</div>
                    </div>
                  `;
                }
              }
            }, 500);
          } else {
            // fallback: 페이지 새로고침
            if (typeof window.loadReservationsTab === 'function') {
              window.loadReservationsTab(service);
            }
          }
        } else {
          alert('삭제에 실패했습니다.');
          if (button) {
            button.disabled = false;
            button.textContent = '삭제';
            button.style.background = '';
            button.style.cursor = 'pointer';
          }
        }
      }).catch(error => {
        console.error('Error:', error);
        alert('삭제에 실패했습니다.');
        if (button) {
          button.disabled = false;
          button.textContent = '삭제';
          button.style.background = '';
          button.style.cursor = 'pointer';
        }
      });
    }
  };

  console.log('예약 관리 함수들이 로드되었습니다.');

  // 보충수업 내용 모달 표시
  window.showLessonContent = function(reservationId) {
    // AJAX로 예약 정보 가져오기
    fetch('/admin/reservations/' + reservationId + '/lesson_content')
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // 모달 내용 업데이트
          document.getElementById('modal-user-name').textContent = data.user_name;
          document.getElementById('modal-date').textContent = data.date;
          document.getElementById('modal-time').textContent = data.time;
          document.getElementById('modal-week-number').textContent = data.week_number ? data.week_number + '주차' : '주차 정보 없음';
          document.getElementById('modal-lesson-content').textContent = data.lesson_content || '내용이 없습니다.';
          
          // 모달 표시
          document.getElementById('lesson-content-modal').classList.add('show');
        } else {
          alert('예약 정보를 불러올 수 없습니다.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('오류가 발생했습니다.');
      });
  };

  // 모달 닫기
  window.closeLessonModal = function() {
    document.getElementById('lesson-content-modal').classList.remove('show');
  };
  
  
})();
</script>

<!-- 보충수업 내용 모달 -->
<div id="lesson-content-modal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3>보충수업 신청 내용</h3>
      <button class="close-btn" onclick="window.closeLessonModal()">&times;</button>
    </div>
    <div class="modal-body">
      <div class="modal-info">
        <div class="info-row">
          <strong>수강생:</strong> <span id="modal-user-name"></span>
        </div>
        <div class="info-row">
          <strong>날짜:</strong> <span id="modal-date"></span>
        </div>
        <div class="info-row">
          <strong>시간:</strong> <span id="modal-time"></span>
        </div>
        <div class="info-row">
          <strong>주차:</strong> <span id="modal-week-number"></span>
        </div>
      </div>
      <div class="modal-lesson-content">
        <strong>신청 내용:</strong>
        <div id="modal-lesson-content" class="lesson-content-text"></div>
      </div>
    </div>
  </div>
</div>


