<script>
// 달력 네비게이션 함수를 먼저 정의 (보강/패스용)
function navigateMonth(direction) {
  var currentCalendar = document.querySelector('.calendar');
  if (!currentCalendar) {
    console.error('Calendar element not found');
    return;
  }
  
  var currentMonth = currentCalendar.getAttribute('data-month');
  var [year, month] = currentMonth.split('-').map(Number);
  
  if (direction === 'prev') {
    month--;
    if (month < 1) {
      month = 12;
      year--;
    }
  } else {
    month++;
    if (month > 12) {
      month = 1;
      year++;
    }
  }
  
  // 두 자리 숫자로 포맷
  var formattedMonth = month < 10 ? '0' + month : month.toString();
  var newDate = year + '-' + formattedMonth + '-01';
  
  // 새 달력 로드
  fetch('/makeup_pass/reserve?date=' + newDate, {
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
    .then(function(response) { return response.text(); })
    .then(function(html) {
      document.getElementById('calendar-container').innerHTML = html;
      
      // 선택 초기화
      if (typeof selectedDate !== 'undefined') {
        selectedDate = null;
        updateTimeSlots(); // 시간 슬롯 업데이트
      }
    })
    .catch(function(error) {
      console.error('달력 로드 오류:', error);
    });
}
</script>

<style>
  .reserve-container {
    min-height: 100vh;
    background: #ffffff;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    padding: 40px 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .reserve-header {
    text-align: center;
    margin-bottom: 30px;
  }
  
  .reserve-title {
    font-size: 1.4rem;
    font-weight: bold;
    color: #2d3748;
    margin-bottom: 20px;
    line-height: 1.3;
  }
  
  .content-wrapper {
    width: 100%;
    max-width: 500px;
  }
  
  .step-section {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: 1px solid #e2e8f0;
    margin-bottom: 20px;
    padding: 25px;
  }
  
  .step-title {
    font-weight: 600;
    color: #2d3748;
    margin-bottom: 15px;
    font-size: 1.1rem;
  }
  
  .calendar-container {
    background: #ffffff;
    border-radius: 8px;
    padding: 0;
  }
  
  .btn-primary {
    background: linear-gradient(135deg, #34d399, #10b981);
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    text-align: center;
    display: block;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    width: 100%;
  }
  
  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(52, 211, 153, 0.3);
  }
  
  .confirmation-card {
    background: linear-gradient(135deg, rgba(52, 211, 153, 0.05), rgba(16, 185, 129, 0.05));
    border: 2px solid rgba(52, 211, 153, 0.2);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 20px;
  }
  
  .confirmation-title {
    font-weight: 600;
    color: #2d3748;
    margin-bottom: 10px;
  }
  
  .confirmation-text {
    color: #4a5568;
    font-size: 0.9rem;
    line-height: 1.5;
  }
  
  .back-link {
    color: #718096;
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.3s ease;
    text-align: center;
    display: block;
    margin-top: 30px;
  }
  
  .back-link:hover {
    color: #2d3748;
    text-decoration: none;
  }

  .hidden {
    display: none !important;
  }

  /* Calendar specific styles */
  .calendar {
    width: 100%;
  }
  
  .calendar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
  }
  
  .calendar-nav-btn {
    color: #718096;
    background: none;
    border: none;
    padding: 8px;
    cursor: pointer;
    border-radius: 4px;
    transition: all 0.3s ease;
  }
  
  .calendar-nav-btn:hover {
    color: #2d3748;
    background-color: #f7fafc;
  }
  
  .calendar-month-title {
    font-weight: 600;
    color: #2d3748;
  }
  
  .calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 4px;
    text-align: center;
  }
  
  .calendar-weekday {
    font-weight: 600;
    color: #718096;
    font-size: 0.75rem;
    padding: 8px 0;
  }
  
  .calendar-day-cell {
    padding: 12px;
    text-align: center;
    border-radius: 8px;
    transition: all 0.3s ease;
    background-color: white;
    border: 1px solid #e2e8f0;
    min-height: 65px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  .calendar-day-cell[data-clickable="true"] {
    cursor: pointer;
  }
  
  .calendar-day-cell:not([data-clickable="true"]) {
    cursor: not-allowed;
    opacity: 0.4;
    background-color: #f9fafb;
  }
  
  .calendar-day-cell:hover:not(.past-day):not(.monday-closed):not(.blocked-day):not(.same-day-disabled)[data-clickable="true"] {
    background-color: #f7fafc;
    border-color: #34d399;
  }

  .calendar-day-cell.selected {
    background: linear-gradient(135deg, #34d399, #10b981);
    color: white;
    border-color: #34d399;
  }
  
  .calendar-day-cell.not-current-month {
    opacity: 0.3;
  }
  
  .calendar-day-cell.past-day,
  .calendar-day-cell.monday-closed,
  .calendar-day-cell.blocked-day,
  .calendar-day-cell.same-day-disabled {
    cursor: not-allowed;
    opacity: 0.4;
    background-color: #f9fafb;
  }
  
  .calendar-day-cell.today {
    color: #059669;
    font-weight: bold;
  }
  
  .calendar-day-cell.monday-closed {
    background-color: #f3f4f6;
    color: #9ca3af;
  }

  .calendar-day-cell.lesson-day {
    background-color: #fef3c7;
    border-color: #fbbf24;
  }

  .calendar-day-cell.lesson-day .day-label {
    color: #92400e;
    font-weight: 600;
  }

  .calendar-day-cell.between-lessons {
    background-color: #fef3c7;
    border-color: #fbbf24;
  }

  .day-number {
    font-size: 0.9rem;
  }
  
  .day-label {
    font-size: 0.65rem;
    margin-top: 2px;
    height: 14px;  /* 고정 높이 확보 */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
  }
  
  .today .day-label {
    color: #059669;
  }
  
  .monday-closed .day-label {
    color: #9ca3af;
  }
  
  /* Enrollment selection styles */
  .enrollment-grid {
    display: grid;
    gap: 15px;
  }

  .enrollment-card {
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 20px;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: left;
    width: 100%;
  }

  .enrollment-card:hover {
    border-color: #34d399;
    background: rgba(52, 211, 153, 0.03);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(52, 211, 153, 0.15);
  }

  .enrollment-card.selected {
    border-color: #34d399;
    background: rgba(52, 211, 153, 0.05);
    transform: translateY(-2px);
  }
  
  /* Type selection styles */
  .type-selection-container {
    display: flex;
    gap: 15px;
    flex-direction: row;
  }

  .type-btn {
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 20px;
    background-color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    width: 100%;
  }

  .type-btn:hover:not(.selected) {
    border-color: #34d399;
    background-color: #f7fafc;
    transform: translateY(-2px);
  }

  .type-btn.selected {
    background-color: rgba(52, 211, 153, 0.1);
    border-color: #34d399;
    border-width: 3px;
  }

  .type-icon {
    font-size: 2.5rem;
    margin-bottom: 5px;
  }

  .type-name {
    font-weight: 700;
    font-size: 1.2rem;
    color: #2d3748;
  }

  .type-description {
    font-size: 0.9rem;
    color: #718096;
  }

  /* Time slot styles */
  .time-slots-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
  }

  .time-slot-btn {
    padding: 15px;
    font-size: 0.9rem;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    background-color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;
  }

  .time-slot-time {
    font-weight: 600;
    color: #2d3748;
    font-size: 0.95rem;
  }

  .time-slot-teacher {
    font-size: 0.8rem;
    color: #667eea;
    font-weight: 500;
  }

  .time-slot-btn:hover:not(.disabled):not(.selected) {
    background-color: #f7fafc;
    border-color: #34d399;
    transform: translateY(-2px);
  }

  .time-slot-btn.selected {
    background: linear-gradient(135deg, #34d399, #10b981);
    border-color: #34d399;
  }

  .time-slot-btn.selected .time-slot-time,
  .time-slot-btn.selected .time-slot-teacher {
    color: white;
  }

  .time-slot-btn.disabled,
  .time-slot-btn:disabled {
    background-color: #f9fafb;
    color: #9ca3af;
    border-color: #e5e7eb;
    cursor: not-allowed;
    opacity: 0.5;
  }

  /* Teacher selection styles */
  .teachers-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
  }

  .teacher-btn {
    padding: 15px;
    font-size: 0.9rem;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    background-color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;
  }

  .teacher-name {
    font-weight: 600;
    color: #2d3748;
    font-size: 1rem;
  }

  .teacher-info {
    font-size: 0.8rem;
    color: #718096;
  }

  .teacher-btn:hover:not(.selected) {
    background-color: #f7fafc;
    border-color: #34d399;
    transform: translateY(-2px);
  }

  .teacher-btn.selected {
    background: linear-gradient(135deg, #34d399, #10b981);
    border-color: #34d399;
  }

  .teacher-btn.selected .teacher-name,
  .teacher-btn.selected .teacher-info {
    color: white;
  }
  
  /* Room selection styles */
  .rooms-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .room-btn {
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    padding: 15px;
    background-color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }
  
  .room-btn:hover:not(.unavailable):not(.selected) {
    border-color: #34d399;
    background-color: #f7fafc;
  }

  .room-btn.selected {
    background-color: rgba(52, 211, 153, 0.1);
    border-color: #34d399;
  }
  
  .room-btn.unavailable {
    cursor: not-allowed;
    background-color: #fef2f2;
    border-color: #fecaca;
    opacity: 0.75;
  }
  
  .room-name {
    font-weight: 600;
    color: #2d3748;
  }
  
  .room-btn.unavailable .room-name {
    color: #9ca3af;
  }
  
  .room-info {
    display: flex;
    gap: 8px;
    align-items: center;
  }
  
  .room-btn.pending {
    cursor: not-allowed;
    background-color: #fffbeb;
    border-color: #fbbf24;
    opacity: 0.8;
  }
  
  .status-pending {
    font-size: 0.75rem;
    background-color: #fef3c7;
    color: #92400e;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: 500;
  }
  
  .status-available {
    font-size: 0.75rem;
    background-color: #dcfce7;
    color: #166534;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: 500;
  }
  
  .status-unavailable {
    font-size: 0.75rem;
    background-color: #fee2e2;
    color: #991b1b;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: 500;
  }
  
  @media (max-width: 480px) {
    .reserve-title {
      font-size: 1.2rem;
      white-space: nowrap;
    }
    
    .reserve-container {
      padding: 20px 15px;
    }
    
    .content-wrapper {
      max-width: 100%;
    }
    
    .step-title {
      font-size: 1rem;
    }
    
    .calendar-grid {
      gap: 2px;
    }
    
    .calendar-day-cell {
      padding: 8px 2px;
      font-size: 12px;
      min-height: 55px;
    }
    
    .day-number {
      font-size: 0.75rem;
    }
    
    .day-label {
      font-size: 0.55rem;
      height: 12px;
    }
    
    .calendar-weekday {
      font-size: 0.7rem;
      padding: 6px 0;
    }
    
    .time-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 6px;
    }
    
    .time-slot-btn {
      padding: 8px 12px;
      font-size: 0.75rem;
    }
    
    .room-btn {
      padding: 12px;
      font-size: 0.85rem;
    }
    
    .confirmation-text {
      font-size: 0.8rem;
    }
    
    .btn-primary {
      font-size: 14px;
      padding: 12px 16px;
    }
    
    .back-link {
      font-size: 0.8rem;
    }
  }
</style>

<div class="reserve-container">
  <div class="reserve-header">
    <h1 class="reserve-title">보강 / 패스 신청하기</h1>
  </div>

  <div class="content-wrapper">
    <% if flash[:alert] %>
      <script>
        alert('이미 예약하셨습니다. 예약한 시간을 먼저 사용해주세요');
      </script>
    <% end %>

    <div>
      <!-- Step 1: 과목 선택 -->
      <div class="step-section" data-reservation-target="enrollmentSection">
        <h3 class="step-title">1. 수강 과목 선택</h3>
        <% if @enrollments.any? %>
          <div class="enrollment-grid" style="display: grid; gap: 15px;">
            <% @enrollments.each do |enrollment| %>
              <button type="button" 
                      class="enrollment-card" 
                      data-enrollment-id="<%= enrollment.id %>"
                      data-teacher="<%= enrollment.teacher %>"
                      data-subject="<%= enrollment.subject %>"
                      data-day="<%= enrollment.day %>"
                      data-time="<%= enrollment.time_slot %>"
                      data-passes="<%= enrollment.remaining_passes %>"
                      style="border: 2px solid #e2e8f0; border-radius: 12px; padding: 20px; background: white; cursor: pointer; transition: all 0.3s ease; text-align: left;">
                <div style="display: flex; justify-content: space-between; align-items: start; margin-bottom: 12px;">
                  <div>
                    <div style="font-size: 1.2rem; font-weight: 700; color: #2d3748; margin-bottom: 4px;">
                      <%= enrollment.subject %>
                    </div>
                    <div style="font-size: 0.9rem; color: #667eea; font-weight: 600;">
                      <%= enrollment.teacher %> 선생님
                    </div>
                  </div>
                  <div style="text-align: right;">
                    <div style="font-size: 0.85rem; color: #718096; margin-bottom: 4px;">
                      <%= enrollment.day_korean %> <%= enrollment.time_slot.gsub('-', ':00-') %>:00
                    </div>
                  </div>
                </div>
                <div style="display: flex; gap: 15px; padding-top: 12px; border-top: 1px solid #e2e8f0;">
                  <div style="flex: 1;">
                    <div style="font-size: 0.75rem; color: #718096; margin-bottom: 4px;">남은 수업</div>
                    <div style="font-size: 1.1rem; font-weight: 700; color: #2d3748;"><%= enrollment.remaining_lessons %>회</div>
                  </div>
                  <% unless enrollment.subject == '믹싱' %>
                    <div style="flex: 1;">
                      <div style="font-size: 0.75rem; color: #718096; margin-bottom: 4px;">패스권</div>
                      <div style="font-size: 1.1rem; font-weight: 700; color: <%= enrollment.remaining_passes > 0 ? '#10b981' : '#dc2626' %>;"><%= enrollment.remaining_passes %>회</div>
                    </div>
                  <% end %>
                </div>
              </button>
            <% end %>
          </div>
        <% else %>
          <div style="text-align: center; padding: 40px; color: #9ca3af;">
            수강 중인 과목이 없습니다.
          </div>
        <% end %>
      </div>

      <!-- Step 2: 보강/패스 선택 -->
      <div class="step-section hidden" data-reservation-target="typeSection">
        <h3 class="step-title">2. 보강 / 패스 선택</h3>
        <div id="selected-enrollment-info" style="background: #f0f9ff; border: 2px solid #3b82f6; border-radius: 8px; padding: 15px; margin-bottom: 15px; display: none;">
          <div style="font-size: 0.85rem; color: #1e40af; font-weight: 600; margin-bottom: 4px;">선택한 과목</div>
          <div style="font-size: 1rem; color: #1e3a8a; font-weight: 700;" id="selected-enrollment-display"></div>
        </div>
        <div class="type-selection-container">
          <button type="button" class="type-btn" data-type="makeup" onclick="selectType(this, 'makeup')">
            <div class="type-icon">📚</div>
            <div class="type-name">보강</div>
            <div class="type-description">다른 시간을 선택합니다</div>
          </button>
          <button type="button" class="type-btn" data-type="pass" onclick="selectType(this, 'pass')">
            <div class="type-icon">✋</div>
            <div class="type-name">패스</div>
            <div class="type-description">수업을 건너뜁니다</div>
          </button>
        </div>
      </div>

      <!-- Step 3: 날짜 선택 -->
      <div class="step-section hidden" data-reservation-target="dateSection">
        <h3 class="step-title">3. 날짜 선택</h3>
        <div id="calendar-container" class="calendar-container">
          <%= render partial: 'calendar', locals: { date: @date, selected_date: nil } %>
        </div>
      </div>

      <!-- Step 4: 선생님 선택 (보강일 때만) -->
      <div class="step-section hidden" data-reservation-target="teacherSection">
        <h3 class="step-title">4. 선생님 선택</h3>
        <div id="teachers-container" class="teachers-grid">
          <!-- 선생님이 여기에 동적으로 추가됩니다 -->
        </div>
      </div>

      <!-- Step 5: 시간 선택 (보강일 때만) -->
      <div class="step-section hidden" data-reservation-target="timeSection">
        <h3 class="step-title">5. 시간 선택</h3>
        <div id="time-slots-container" class="time-slots-grid">
          <!-- 시간대가 여기에 동적으로 추가됩니다 -->
        </div>
      </div>

      <!-- Step 6 (보강) / Step 4 (패스): 신청 정보 입력 -->
      <div class="step-section hidden" data-reservation-target="contentSection">
        <h3 class="step-title"><span id="content-step-number">6</span>. <span id="content-section-title">신청 정보</span></h3>

        <div style="margin-bottom: 20px;">
          <label style="display: block; font-weight: 600; color: #2d3748; margin-bottom: 8px;">주차</label>
          <input type="text"
                 id="week-number"
                 readonly
                 style="width: 100%; padding: 12px; border: 1px solid #e2e8f0; border-radius: 8px; font-size: 0.95rem; background-color: #f7fafc; cursor: not-allowed;"
                 placeholder="자동 입력됩니다">
        </div>

        <div style="margin-bottom: 15px;">
          <label id="content-label" style="display: block; font-weight: 600; color: #2d3748; margin-bottom: 8px;">보강/패스 원하는 이유</label>
          <textarea id="lesson-content"
                    placeholder="보강/패스를 원하는 이유를 적어주세요😊"
                    style="width: 100%; min-height: 120px; padding: 12px; border: 1px solid #e2e8f0; border-radius: 8px; font-size: 0.95rem; resize: vertical;"
                    oninput="updateConfirmationIfReady()"></textarea>
        </div>
      </div>
      
      <!-- 신청 확인 -->
      <div class="hidden" data-reservation-target="confirmSection">
        <%= form_with url: "#", method: :post, local: true, data: { reservation_target: "form", turbo: false } do |f| %>
          <%= hidden_field_tag "makeup_pass_request[date]", nil, id: "hidden-date" %>
          <%= hidden_field_tag "makeup_pass_request[type]", nil, id: "hidden-type" %>
          <%= hidden_field_tag "makeup_pass_request[user_enrollment_id]", nil, id: "hidden-enrollment-id" %>
          <%= hidden_field_tag "makeup_pass_request[time_slot]", nil, id: "hidden-time-slot" %>
          <%= hidden_field_tag "makeup_pass_request[teacher]", nil, id: "hidden-teacher" %>
          <%= hidden_field_tag "makeup_pass_request[content]", nil, data: { reservation_target: "lessonContent" } %>
          <%= hidden_field_tag "makeup_pass_request[week_number]", nil, data: { reservation_target: "weekNumber" } %>
          <%= hidden_field_tag "makeup_pass_request[group_makeup_slot_id]", nil, id: "hidden-group-makeup-slot-id" %>

          <div class="confirmation-card">
            <h3 class="confirmation-title">신청 정보 확인</h3>
            <div class="confirmation-text" data-reservation-target="summary"></div>
          </div>

          <button type="button" class="btn-primary" id="reservation-submit-btn" onclick="window.confirmMakeupPassRequest()">신청하기</button>
        <% end %>
      </div>
    </div>

    <%= link_to "← 뒤로가기", makeup_pass_path, class: "back-link" %>
  </div>
</div>

<script>
var selectedEnrollment = null;
var selectedDate = null;
var selectedType = null;
var selectedTimeSlot = null;
var selectedTeacher = null;
var selectedWeekNumber = null;
var selectedGroupMakeupSlotId = null;
var hasCancelledMakeupByEnrollment = {};
var remainingPasses = <%= @remaining_passes || 0 %>;
var cleanTeachersByDay = <%= raw(@clean_teachers_by_day.to_json) if @clean_teachers_by_day %>;

window.selectEnrollment = function(element) {
  document.querySelectorAll('.enrollment-card').forEach(card => {
    card.style.borderColor = '#e2e8f0';
    card.style.background = 'white';
    card.style.transform = 'none';
  });

  element.style.borderColor = '#34d399';
  element.style.background = 'rgba(52, 211, 153, 0.05)';
  element.style.transform = 'translateY(-2px)';

  selectedEnrollment = {
    id: element.dataset.enrollmentId,
    teacher: element.dataset.teacher,
    subject: element.dataset.subject,
    day: element.dataset.day,
    time: element.dataset.time,
    passes: parseInt(element.dataset.passes)
  };

  console.log('과목 선택:', selectedEnrollment);

  document.querySelector('[data-reservation-target="typeSection"]').classList.remove('hidden');
  document.getElementById('selected-enrollment-info').style.display = 'block';
  document.getElementById('selected-enrollment-display').textContent = 
    selectedEnrollment.subject + ' - ' + selectedEnrollment.teacher + ' 선생님';

  selectedType = null;
  selectedDate = null;
  selectedTimeSlot = null;
  selectedTeacher = null;

  document.querySelector('[data-reservation-target="dateSection"]').classList.add('hidden');
  document.querySelector('[data-reservation-target="timeSection"]').classList.add('hidden');
  document.querySelector('[data-reservation-target="teacherSection"]').classList.add('hidden');
  document.querySelector('[data-reservation-target="contentSection"]').classList.add('hidden');
  document.querySelector('[data-reservation-target="confirmSection"]').classList.add('hidden');
}

window.selectType = function(element, type) {
  if (!selectedEnrollment) {
    alert('먼저 과목을 선택해주세요.');
    return;
  }

  if (type === 'pass' && selectedEnrollment.subject === '믹싱') {
    alert('믹싱 과목은 패스를 사용할 수 없습니다.\n보강 신청만 가능합니다.');
    element.classList.remove('selected');
    return;
  }

  selectedType = type;
  console.log('타입 선택:', type);

  if (type === 'pass' && selectedEnrollment.passes <= 0) {
    alert('해당 과목의 남은 패스권이 없습니다.\n보강 신청만 가능합니다.');
    element.classList.remove('selected');
    selectedType = null;
    return;
  }

  // enrollment별 취소 이력 체크
  if (type === 'makeup' && selectedEnrollment && selectedEnrollment.id) {
    // 아직 체크하지 않은 enrollment면 서버에서 확인
    if (hasCancelledMakeupByEnrollment[selectedEnrollment.id] === undefined) {
      // 동기적으로 체크 (간단히 하기 위해)
      fetch('/makeup_pass/check_cancelled_makeup?enrollment_id=' + selectedEnrollment.id, {
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
      })
        .then(function(response) { return response.json(); })
        .then(function(data) {
          hasCancelledMakeupByEnrollment[selectedEnrollment.id] = data.has_cancelled;
          if (data.has_cancelled) {
            var message = '이 과목의 보강을 취소하신 이력이 있어 ';
            if (data.next_lesson_datetime) {
              message += '다음 정규 수업일(' + data.next_lesson_datetime + ') 전까지 ';
            } else {
              message += '다음 정규 수업일 전까지 ';
            }
            message += '보강 신청이 제한됩니다.\n패스는 신청 가능합니다.';
            alert(message);
            element.classList.remove('selected');
            selectedType = null;
            return;
          } else {
            // 취소 이력 없으면 계속 진행
            continueTypeSelection(element, type);
          }
        })
        .catch(function(error) {
          console.error('취소 이력 확인 오류:', error);
        });
      return;
    } else if (hasCancelledMakeupByEnrollment[selectedEnrollment.id]) {
      var message = '이 과목의 보강을 취소하신 이력이 있어 다음 정규 수업일 전까지 보강 신청이 제한됩니다.\n패스는 신청 가능합니다.';
      alert(message);
      element.classList.remove('selected');
      selectedType = null;
      return;
    }
  }

  continueTypeSelection(element, type);
}

window.continueTypeSelection = function(element, type) {
  selectedType = type;

  var typeButtons = document.querySelectorAll('.type-btn');
  for (var i = 0; i < typeButtons.length; i++) {
    typeButtons[i].classList.remove('selected');
  }
  element.classList.add('selected');

  selectedDate = null;
  selectedTimeSlot = null;
  selectedTeacher = null;
  selectedWeekNumber = null;
  selectedGroupMakeupSlotId = null;

  var dateElements = document.querySelectorAll('[data-date]');
  for (var i = 0; i < dateElements.length; i++) {
    dateElements[i].classList.remove('selected');
  }

  var isMixingMakeup = selectedEnrollment.teacher === '지명' &&
                       selectedEnrollment.subject === '믹싱' &&
                       type === 'makeup';

  if (isMixingMakeup) {
    hideSection('timeSection');
    hideSection('teacherSection');
    hideSection('contentSection');
    hideSection('confirmSection');

    var dateSection = document.querySelector('[data-reservation-target="dateSection"]');
    if (dateSection) {
      dateSection.classList.remove('hidden');
      console.log('날짜 선택 섹션 표시 (믹싱 그룹 보강)');
    }

    var currentMonth = new Date();
    var year = currentMonth.getFullYear();
    var month = String(currentMonth.getMonth() + 1).padStart(2, '0');
    var dateStr = year + '-' + month + '-01';

    fetch('/makeup_pass/reserve?date=' + dateStr + '&enrollment_id=' + selectedEnrollment.id, {
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
      .then(function(response) { return response.text(); })
      .then(function(html) {
        document.getElementById('calendar-container').innerHTML = html;
        selectedDate = null;
        updateCalendarForMixingMakeup();
      })
      .catch(function(error) {
        console.error('달력 로드 오류:', error);
      });
  } else {
    hideSection('timeSection');
    hideSection('teacherSection');
    hideSection('contentSection');
    hideSection('confirmSection');

    var dateSection = document.querySelector('[data-reservation-target="dateSection"]');
    if (dateSection) {
      dateSection.classList.remove('hidden');
      console.log('날짜 선택 섹션 표시');
    }

    if (selectedEnrollment && selectedEnrollment.id) {
      var currentMonth = new Date();
      var year = currentMonth.getFullYear();
      var month = String(currentMonth.getMonth() + 1).padStart(2, '0');
      var dateStr = year + '-' + month + '-01';

      fetch('/makeup_pass/reserve?date=' + dateStr + '&enrollment_id=' + selectedEnrollment.id, {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
        .then(function(response) { return response.text(); })
        .then(function(html) {
          document.getElementById('calendar-container').innerHTML = html;
          selectedDate = null;

          if (selectedType) {
            updateCalendarForType(selectedType);
          }
        })
        .catch(function(error) {
          console.error('달력 로드 오류:', error);
        });
    } else {
      updateCalendarForType(type);
    }
  }
}

window.selectDate = function(element) {
  // data-clickable 속성이 없으면 선택 불가
  if (!element.hasAttribute('data-clickable')) {
    console.log('선택 불가한 날짜입니다.');
    return;
  }

  selectedDate = element.getAttribute('data-date');
  console.log('날짜 선택:', selectedDate);

  var dateElements = document.querySelectorAll('[data-date]');
  for (var i = 0; i < dateElements.length; i++) {
    dateElements[i].classList.remove('selected');
  }
  element.classList.add('selected');

  var isMixingMakeup = selectedEnrollment &&
                       selectedEnrollment.teacher === '지명' &&
                       selectedEnrollment.subject === '믹싱' &&
                       selectedType === 'makeup';

  if (selectedType === 'makeup') {
    if (isMixingMakeup) {
      hideSection('teacherSection');
      hideSection('contentSection');
      hideSection('confirmSection');

      calculateAndSetWeekNumber();

      loadTimeSlots(selectedDate, null);
      var timeSection = document.querySelector('[data-reservation-target="timeSection"]');
      if (timeSection) {
        timeSection.classList.remove('hidden');
        console.log('시간 선택 섹션 표시 (믹싱 그룹 보강)');
      }

      var stepNumber = document.getElementById('content-step-number');
      if (stepNumber) stepNumber.textContent = '4';
    } else {
      loadTeachers(selectedDate);
      var teacherSection = document.querySelector('[data-reservation-target="teacherSection"]');
      if (teacherSection) {
        teacherSection.classList.remove('hidden');
        console.log('선생님 선택 섹션 표시');
      }
      hideSection('timeSection');
      hideSection('contentSection');
      hideSection('confirmSection');

      var stepNumber = document.getElementById('content-step-number');
      var sectionTitle = document.getElementById('content-section-title');
      var contentLabel = document.getElementById('content-label');
      if (stepNumber) stepNumber.textContent = '6';
      if (sectionTitle) sectionTitle.textContent = '신청 정보';
      if (contentLabel) contentLabel.textContent = '보강/패스 원하는 이유';
    }
  } else {
    hideSection('teacherSection');
    hideSection('timeSection');
    var contentSection = document.querySelector('[data-reservation-target="contentSection"]');
    if (contentSection) {
      contentSection.classList.remove('hidden');
      console.log('신청 정보 입력 섹션 표시');
    }
    hideSection('confirmSection');

    var stepNumber = document.getElementById('content-step-number');
    var sectionTitle = document.getElementById('content-section-title');
    var contentLabel = document.getElementById('content-label');
    if (stepNumber) stepNumber.textContent = '4';
    if (sectionTitle) sectionTitle.textContent = '패스 신청 사유';
    if (contentLabel) contentLabel.textContent = '보강/패스 원하는 이유';

    calculateAndSetWeekNumber();
  }
}

function updateCalendarForMixingMakeup() {
  console.log('믹싱 그룹 보강용 달력 필터링 시작');
  var allDayCells = document.querySelectorAll('.calendar-day-cell');

  allDayCells.forEach(function(cell) {
    var date = cell.getAttribute('data-date');
    if (!date) return;

    var dateObj = new Date(date);
    var dayOfWeek = dateObj.getDay();

    var isTueOrSat = dayOfWeek === 2 || dayOfWeek === 6;
    var isPast = cell.classList.contains('past-day');
    var isNotCurrentMonth = cell.classList.contains('not-current-month');

    cell.onclick = null;
    cell.removeAttribute('data-clickable');

    if (isTueOrSat && !isPast && !isNotCurrentMonth) {
      cell.setAttribute('data-clickable', 'true');
      cell.style.cursor = 'pointer';
      cell.style.opacity = '';
      cell.addEventListener('click', function() {
        selectDate(this);
      });
    } else {
      cell.style.cursor = 'not-allowed';
      cell.style.opacity = '0.4';
    }
  });
}

function loadTimeSlots(date, teacher) {
  console.log('시간대 로딩:', date, teacher);

  var url = '/makeup_pass/available_time_slots?date=' + date;

  // 믹싱 그룹 보강인 경우
  var isMixingMakeup = selectedEnrollment &&
                       selectedEnrollment.teacher === '지명' &&
                       selectedEnrollment.subject === '믹싱' &&
                       selectedType === 'makeup';

  if (isMixingMakeup) {
    url += '&enrollment_id=' + selectedEnrollment.id;
  } else if (teacher) {
    url += '&teacher=' + encodeURIComponent(teacher);
  }

  fetch(url, {
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
    .then(function(response) { return response.json(); })
    .then(function(slots) {
      console.log('사용 가능한 시간대:', slots);
      renderTimeSlots(slots);
    })
    .catch(function(error) {
      console.error('시간대 로드 오류:', error);
      alert('시간대를 불러오는데 실패했습니다.');
    });
}

function renderTimeSlots(slots) {
  var container = document.getElementById('time-slots-container');
  container.innerHTML = '';

  if (slots.length === 0) {
    container.innerHTML = '<div style="text-align: center; color: #718096; padding: 20px;">예약 가능한 시간대가 없습니다.</div>';
    return;
  }

  var isMixingMakeup = selectedEnrollment &&
                       selectedEnrollment.teacher === '지명' &&
                       selectedEnrollment.subject === '믹싱' &&
                       selectedType === 'makeup';

  slots.forEach(function(slot) {
    var btn = document.createElement('button');
    btn.type = 'button';
    btn.className = 'time-slot-btn';

    if (isMixingMakeup && slot.group_makeup_slot_id) {
      // 그룹 보강 슬롯
      btn.setAttribute('data-time-slot', slot.time_slot);
      btn.setAttribute('data-teacher', slot.teacher);
      btn.setAttribute('data-group-makeup-slot-id', slot.group_makeup_slot_id);
      btn.onclick = function() {
        selectGroupMakeupSlot(this, slot.time_slot, slot.teacher, slot.group_makeup_slot_id);
      };

      var capacityText = ' (' + slot.current_count + '/' + slot.max_capacity + '명)';
      btn.innerHTML = '<div class="time-slot-time">' + slot.display_time + capacityText + '</div>' +
                      '<div class="time-slot-teacher">' + slot.teacher + ' 선생님</div>';
    } else {
      // 일반 보강 슬롯
      btn.setAttribute('data-time-slot', slot.time_slot);
      btn.setAttribute('data-teacher', slot.teacher);
      btn.onclick = function() { selectTimeSlot(this, slot.time_slot, slot.teacher); };

      var availableText = slot.available_slots ? ' (' + slot.available_slots + '석)' : '';
      btn.innerHTML = '<div class="time-slot-time">' + slot.display_time + availableText + '</div>';
    }

    container.appendChild(btn);
  });
}

function selectGroupMakeupSlot(element, timeSlot, teacher, groupMakeupSlotId) {
  selectedTimeSlot = timeSlot;
  selectedTeacher = teacher;
  selectedGroupMakeupSlotId = groupMakeupSlotId;
  console.log('그룹 보강 슬롯 선택:', timeSlot, '선생님:', teacher, 'Slot ID:', groupMakeupSlotId);

  var timeButtons = document.querySelectorAll('.time-slot-btn');
  for (var i = 0; i < timeButtons.length; i++) {
    timeButtons[i].classList.remove('selected');
  }
  element.classList.add('selected');

  document.querySelector('[data-reservation-target="contentSection"]').classList.remove('hidden');
  document.getElementById('content-step-number').textContent = '4';
  document.getElementById('content-section-title').textContent = '신청 정보';
  document.querySelector('[data-reservation-target="confirmSection"]').classList.add('hidden');

  calculateAndSetWeekNumber();
}

function selectTimeSlot(element, timeSlot, teacher) {
  selectedTimeSlot = timeSlot;
  selectedTeacher = teacher;
  console.log('시간 선택:', timeSlot, '선생님:', teacher);

  var timeButtons = document.querySelectorAll('.time-slot-btn');
  for (var i = 0; i < timeButtons.length; i++) {
    timeButtons[i].classList.remove('selected');
  }
  element.classList.add('selected');

  document.querySelector('[data-reservation-target="contentSection"]').classList.remove('hidden');
  document.getElementById('content-step-number').textContent = '6';
  document.getElementById('content-section-title').textContent = '신청 정보';
  document.querySelector('[data-reservation-target="confirmSection"]').classList.add('hidden');

  calculateAndSetWeekNumber();
}

function loadTeachers(date) {
  console.log('선생님 목록 로딩:', date);

  var url = '/makeup_pass/available_teachers?date=' + date;
  if (selectedEnrollment && selectedEnrollment.id) {
    url += '&enrollment_id=' + selectedEnrollment.id;
  }

  fetch(url, {
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
    .then(function(response) { return response.json(); })
    .then(function(teachers) {
      console.log('사용 가능한 선생님:', teachers);
      renderTeachers(teachers);
    })
    .catch(function(error) {
      console.error('선생님 목록 로드 오류:', error);
      alert('선생님 목록을 불러오는데 실패했습니다.');
    });
}

function renderTeachers(teachers) {
  var container = document.getElementById('teachers-container');
  container.innerHTML = '';

  if (teachers.length === 0) {
    container.innerHTML = '<div style="text-align: center; color: #718096; padding: 20px;">예약 가능한 선생님이 없습니다.</div>';
    return;
  }

  teachers.forEach(function(teacherData) {
    var btn = document.createElement('button');
    btn.type = 'button';
    btn.className = 'teacher-btn';
    btn.setAttribute('data-teacher', teacherData.teacher);
    btn.onclick = function() { selectTeacher(this, teacherData.teacher); };

    btn.innerHTML =
      '<div class="teacher-name">' + teacherData.teacher + ' 선생님</div>';

    container.appendChild(btn);
  });
}

function selectTeacher(element, teacher) {
  selectedTeacher = teacher;
  console.log('선생님 선택:', teacher);

  var teacherButtons = document.querySelectorAll('.teacher-btn');
  for (var i = 0; i < teacherButtons.length; i++) {
    teacherButtons[i].classList.remove('selected');
  }
  element.classList.add('selected');

  loadTimeSlots(selectedDate, teacher);
  var timeSection = document.querySelector('[data-reservation-target="timeSection"]');
  if (timeSection) {
    timeSection.classList.remove('hidden');
    console.log('시간 선택 섹션 표시');
  }
  hideSection('contentSection');
  hideSection('confirmSection');

  var sectionTitle = document.getElementById('content-section-title');
  var contentLabel = document.getElementById('content-label');
  if (sectionTitle) sectionTitle.textContent = '신청 정보';
  if (contentLabel) contentLabel.textContent = '보강/패스 원하는 이유';
}


function updateConfirmationIfReady() {
  var weekNumber = document.getElementById('week-number').value;
  var lessonContent = document.getElementById('lesson-content').value.trim();
  
  if (weekNumber && lessonContent) {
    showConfirmation();
  } else {
    hideSection('confirmSection');
  }
}

function calculateAndSetWeekNumber() {
  if (!selectedEnrollment || !selectedDate) {
    return;
  }

  fetch('/makeup_pass/calculate_week?enrollment_id=' + selectedEnrollment.id + '&date=' + selectedDate)
    .then(function(response) { return response.json(); })
    .then(function(data) {
      var weekNumberInput = document.getElementById('week-number');
      if (weekNumberInput && data.week_number) {
        weekNumberInput.value = data.week_number + '주차';
        console.log('주차 자동 설정:', data.week_number);
      }
    })
    .catch(function(error) {
      console.error('주차 계산 오류:', error);
    });
}

function showConfirmation() {
  var lessonContent = document.getElementById('lesson-content').value;
  var weekNumberText = document.getElementById('week-number').value;
  var weekNumber = parseInt(weekNumberText.replace(/[^0-9]/g, ''));

  var lessonContentField = document.querySelector('[data-reservation-target="lessonContent"]');
  var weekNumberField = document.querySelector('[data-reservation-target="weekNumber"]');

  if (lessonContentField) lessonContentField.value = lessonContent;
  if (weekNumberField) weekNumberField.value = weekNumber;

  console.log('Form values set:', {
    date: selectedDate,
    type: selectedType,
    lessonContent: lessonContentField.value,
    weekNumber: weekNumberField.value
  });

  var dateObj = new Date(selectedDate);
  var weekdays = ['일', '월', '화', '수', '목', '금', '토'];
  var weekday = weekdays[dateObj.getDay()];
  var formattedDate = (dateObj.getMonth() + 1) + '월 ' + dateObj.getDate() + '일(' + weekday + ')';
  var typeText = selectedType === 'makeup' ? '보강' : '패스';

  var summaryElement = document.querySelector('[data-reservation-target="summary"]');
  if (summaryElement) {
    var contentPreview = lessonContent.length > 50 ? lessonContent.substring(0, 50) + '...' : lessonContent;

    var summaryHTML = '<div>날짜: ' + formattedDate + '</div>' +
                      '<div>유형: ' + typeText + '</div>';

    if (selectedType === 'makeup' && selectedTimeSlot && selectedTeacher) {
      var timeDisplay = selectedTimeSlot.split('-').join(':00-') + ':00';
      summaryHTML += '<div>시간: ' + timeDisplay + '</div>' +
                     '<div>담당 선생님: ' + selectedTeacher + '</div>';
    }

    summaryHTML += '<div>주차: ' + weekNumber + '주차</div>' +
                   '<div style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #e2e8f0;">신청 내용: ' + contentPreview + '</div>';

    summaryElement.innerHTML = summaryHTML;
  }

  var confirmSection = document.querySelector('[data-reservation-target="confirmSection"]');
  if (confirmSection) {
    confirmSection.classList.remove('hidden');
    console.log('예약 확인 섹션 표시');
  }
}

function hideSection(target) {
  var section = document.querySelector('[data-reservation-target="' + target + '"]');
  if (section) {
    section.classList.add('hidden');
  }
}

function updateCalendarForType(type) {
  console.log('updateCalendarForType 호출:', type);
  var allDayCells = document.querySelectorAll('.calendar-day-cell');
  console.log('총 날짜 셀 개수:', allDayCells.length);

  var clickableCount = 0;
  for (var i = 0; i < allDayCells.length; i++) {
    var cell = allDayCells[i];
    var dayLabel = cell.querySelector('.day-label');

    var isPrevLesson = dayLabel && dayLabel.textContent.trim() === '저번수업';
    var isNextLesson = dayLabel && dayLabel.textContent.trim() === '이번수업';
    var isFollowingLesson = dayLabel && dayLabel.textContent.trim() === '다음수업';
    var isBetweenLessons = cell.classList.contains('between-lessons');

    cell.onclick = null;
    cell.removeAttribute('data-clickable');

    if (type === 'makeup') {
      if (isPrevLesson || isNextLesson) {
        cell.classList.add('lesson-day');
      }
      if (isBetweenLessons) {
        cell.classList.add('between-lessons');
      }
      if (isFollowingLesson) {
        cell.classList.remove('lesson-day');
        cell.style.backgroundColor = '';
        cell.style.borderColor = '';
      }

      if (!isFollowingLesson) {
        cell.style.backgroundColor = '';
        cell.style.borderColor = '';
      }

      if (isBetweenLessons && !isPrevLesson) {
        cell.setAttribute('data-clickable', 'true');
        cell.style.cursor = 'pointer';
        cell.style.opacity = '';
        cell.addEventListener('click', function() {
          selectDate(this);
        });
        clickableCount++;
        console.log('클릭 가능 설정:', cell.getAttribute('data-date'));
      } else {
        cell.style.cursor = 'not-allowed';
        cell.style.opacity = '0.4';
      }
    } else if (type === 'pass') {
      if (isBetweenLessons || isFollowingLesson) {
        cell.classList.remove('between-lessons');
        cell.classList.remove('lesson-day');
        cell.style.backgroundColor = '';
        cell.style.borderColor = '';
      }

      if (isNextLesson) {
        cell.classList.add('lesson-day');
      }

      if (isNextLesson) {
        cell.setAttribute('data-clickable', 'true');
        cell.style.cursor = 'pointer';
        cell.style.opacity = '';
        cell.addEventListener('click', function() {
          selectDate(this);
        });
        clickableCount++;
      } else {
        cell.style.cursor = 'not-allowed';
        cell.style.opacity = '0.4';
      }
    }
  }
  console.log('총 클릭 가능 셀 개수:', clickableCount);
}

window.confirmMakeupPassRequest = function() {
  try {
    console.log('confirmMakeupPassRequest 호출됨', {
      selectedDate: selectedDate,
      selectedType: selectedType,
      selectedTimeSlot: selectedTimeSlot,
      selectedTeacher: selectedTeacher
    });

    if (!selectedDate || !selectedType) {
      alert('신청 정보가 불완전합니다.');
      return false;
    }

    if (selectedType === 'makeup' && (!selectedTimeSlot || !selectedTeacher)) {
      alert('시간과 선생님을 선택해주세요.');
      return false;
    }

    var dateObj = new Date(selectedDate);
    var weekdays = ['일', '월', '화', '수', '목', '금', '토'];
    var weekday = weekdays[dateObj.getDay()];
    var formattedDate = (dateObj.getMonth() + 1) + '월 ' + dateObj.getDate() + '일(' + weekday + ')';

    var lessonContent = document.getElementById('lesson-content').value.trim();
    var weekNumberText = document.getElementById('week-number').value;

    console.log('입력값 확인:', {
      weekNumberText: weekNumberText,
      lessonContent: lessonContent
    });

    if (!weekNumberText || !lessonContent) {
      alert('주차와 신청 내용을 입력해주세요.');
      return false;
    }

    var weekNumber = parseInt(weekNumberText.replace(/[^0-9]/g, ''));
    if (!weekNumber || isNaN(weekNumber)) {
      alert('주차 정보가 유효하지 않습니다.');
      return false;
    }

    var form = document.querySelector('[data-reservation-target="form"]');
    var lessonContentField = document.querySelector('[data-reservation-target="lessonContent"]');
    var weekNumberField = document.querySelector('[data-reservation-target="weekNumber"]');

    if (!form || !lessonContentField || !weekNumberField) {
      console.error('Form validation failed: Missing form elements');
      alert('신청 폼 오류가 발생했습니다.\n페이지를 새로고침 후 다시 시도해주세요.');
      return false;
    }

    lessonContentField.value = lessonContent;
    weekNumberField.value = weekNumber;

    var dateField = document.getElementById('hidden-date');
    var typeField = document.getElementById('hidden-type');
    var enrollmentIdField = document.getElementById('hidden-enrollment-id');
    var timeSlotField = document.getElementById('hidden-time-slot');
    var teacherField = document.getElementById('hidden-teacher');
    var groupMakeupSlotIdField = document.getElementById('hidden-group-makeup-slot-id');

    if (dateField) dateField.value = selectedDate;
    if (typeField) typeField.value = selectedType;
    if (enrollmentIdField && selectedEnrollment) enrollmentIdField.value = selectedEnrollment.id;
    if (timeSlotField) timeSlotField.value = selectedTimeSlot || '';
    if (teacherField) teacherField.value = selectedTeacher || '';
    if (groupMakeupSlotIdField) groupMakeupSlotIdField.value = selectedGroupMakeupSlotId || '';

    console.log('Pre-submit validation:', {
      date: selectedDate,
      type: selectedType,
      timeSlot: selectedTimeSlot,
      teacher: selectedTeacher,
      lessonContent: lessonContent,
      weekNumber: weekNumber
    });

    var typeText = selectedType === 'makeup' ? '보강' : '패스';
    var confirmMessage = '';

    console.log('selectedType 체크:', selectedType);

    if (selectedType === 'pass') {
      confirmMessage = '패스 신청을 진행하시겠습니까?\n패스 신청 시 패스권이 1회 사용되며,\n패스 사용은 취소하실 수 없습니다.';
      console.log('패스 confirm 메시지 설정:', confirmMessage);
    } else {
      confirmMessage = '신청을 진행하시겠습니까?\n\n날짜: ' + formattedDate + '\n유형: ' + typeText;

      if (selectedType === 'makeup') {
        var timeDisplay = selectedTimeSlot.split('-').join(':00-') + ':00';
        confirmMessage += '\n시간: ' + timeDisplay + '\n담당 선생님: ' + selectedTeacher;
      }

      confirmMessage += '\n주차: ' + weekNumber + '주차\n내용: ' + (lessonContent.length > 30 ? lessonContent.substring(0, 30) + '...' : lessonContent);
    }

    console.log('최종 confirm 메시지:', confirmMessage);
    if (confirm(confirmMessage)) {
      var submitBtn = document.getElementById('reservation-submit-btn');

      if (submitBtn) {
        if (submitBtn.disabled) {
          alert('이미 신청 요청이 처리 중입니다.');
          return false;
        }

        submitBtn.disabled = true;
        submitBtn.textContent = '신청 중...';
      }

      console.log('Submitting form with values:', {
        date: selectedDate,
        type: selectedType,
        lessonContent: lessonContentField.value,
        weekNumber: weekNumberField.value
      });

      if (form.requestSubmit) {
        var hiddenSubmit = document.createElement('input');
        hiddenSubmit.type = 'submit';
        hiddenSubmit.style.display = 'none';
        form.appendChild(hiddenSubmit);
        hiddenSubmit.click();
        form.removeChild(hiddenSubmit);
      } else {
        form.submit();
      }
      return true;
    }
    return false;
  } catch (error) {
    console.error('Error in confirmMakeupReservation:', error);
    alert('신청 처리 중 오류가 발생했습니다.\n페이지를 새로고침 후 다시 시도해주세요.\n\n오류: ' + error.message);
    return false;
  }
};

window.showPendingMessage = function() {
  alert('⏳ 승인 대기중인 자리입니다.\n\n' +
        '관리자 승인 후 확정되므로\n' +
        '다른 좌석을 선택해주세요.');
};

// 달력 네비게이션 함수
function navigateMakeupPassMonth(direction) {
  var currentCalendar = document.querySelector('.calendar');
  var currentMonth = currentCalendar.getAttribute('data-month');
  var [year, month] = currentMonth.split('-').map(Number);
  
  if (direction === 'prev') {
    month--;
    if (month < 1) {
      month = 12;
      year--;
    }
  } else {
    month++;
    if (month > 12) {
      month = 1;
      year++;
    }
  }
  
  var formattedMonth = month < 10 ? '0' + month : month.toString();
  var newDate = year + '-' + formattedMonth + '-01';
  
  var url = '/makeup_pass/reserve?date=' + newDate;
  if (selectedEnrollment && selectedEnrollment.id) {
    url += '&enrollment_id=' + selectedEnrollment.id;
  }
  
  fetch(url, {
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
    .then(function(response) { return response.text(); })
    .then(function(html) {
      document.getElementById('calendar-container').innerHTML = html;

      selectedDate = null;
      
      if (selectedType) {
        updateCalendarForType(selectedType);
      }
    })
    .catch(function(error) {
      console.error('달력 로드 오류:', error);
    });
}

// 전역 함수로 등록
window.navigateMakeupPassMonth = navigateMakeupPassMonth;

window.initializeEventListeners = function() {
  document.querySelectorAll('.enrollment-card').forEach(function(card) {
    card.addEventListener('click', function() {
      if (window.selectEnrollment) {
        window.selectEnrollment(this);
      }
    });
  });
  
  document.querySelectorAll('.type-btn').forEach(function(btn) {
    btn.addEventListener('click', function() {
      if (window.selectType) {
        const type = this.dataset.type;
        window.selectType(this, type);
      }
    });
  });
};

if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', window.initializeEventListeners);
} else {
  window.initializeEventListeners();
}

console.log('보강/패스 신청 JavaScript 로드 완료');
</script>